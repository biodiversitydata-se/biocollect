diff --git a/.gitignore b/.gitignore
index 49a9d943..80cd1a33 100644
--- a/.gitignore
+++ b/.gitignore
@@ -10,4 +10,5 @@ out/
 .project
 .settings
 .classpath
-.asscache
\ No newline at end of file
+.asscache
+grails-app/assets/components/compile/biocollect-templates.js
\ No newline at end of file
diff --git a/.travis.yml b/.travis.yml
index a03201dc..970c1d55 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -9,6 +9,7 @@ branches:
   - master
   - dev
   - /^feature\/.*$/
+  - /^hotfix\/.*$/
 before_cache:
   - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
   - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
diff --git a/build.gradle b/build.gradle
index e7510e44..17c3d15c 100644
--- a/build.gradle
+++ b/build.gradle
@@ -17,7 +17,7 @@ plugins {
     id 'war'
 }
 
-version "5.1-SNAPSHOT"
+version "5.0.3"
 group "au.org.ala"
 
 apply plugin:"eclipse"
@@ -133,7 +133,7 @@ dependencies {
     compile "org.grails.plugins:ala-admin-plugin:2.1"
     if (!inplace) {
         compile "org.grails.plugins:ala-map-plugin:3.0"
-        compile "org.grails.plugins:ecodata-client-plugin:3.0"
+        compile "org.grails.plugins:ecodata-client-plugin:3.0.2"
     }
 }
 
diff --git a/grails-app/assets/components/compile/biocollect-templates.js b/grails-app/assets/components/compile/biocollect-templates.js
deleted file mode 100644
index e48f8bce..00000000
--- a/grails-app/assets/components/compile/biocollect-templates.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Do not edit or commit this file. This file built at compile by _Events.groovy */
-componentService.setTemplate("map-config-selector", "<div class=\"row-fluid bg-selected-color padding-5\"> <div class=\"span5\"> <h4>Base layers</h4> <div class=\"row-fluid\"> <div class=\"span12\"> <div class=\"form-horizontal\"> <div class=\"control-group\"> <div class=\"control-label\"> Choose base layer <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'Select a base layer e.g. - Satellite map, Road map, Topographic map etc.'}\"> <i class=\"icon-question-sign\"></i> </a> </div> <div class=\"controls\"> <select data-bind=\"options: allBaseLayers, optionsText: 'displayText', value: selectedBaseLayer, optionCaption: 'Choose base layer ...'\"></select> <button class=\"btn btn-default add-base-layer\" data-bind=\"click: addBaseLayerClickHandler, disable: allBaseLayers().length == 0\"><i class=\"icon icon-plus\"></i> Add </button> </div> </div> </div> <table class=\"table table-bordered\"> <thead> <tr> <th>Name</th> <th> Display name <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'Change that text appearing on the layer selection panel'}\"> <i class=\"icon-question-sign\"></i> </a> </th> <th> Is default? <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'The selected layer will be show by default to the users. Users will have the option to select other base layers you have selected here.'}\"> <i class=\"icon-question-sign\"></i> </a> </th> <th> Actions <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'<strong>Remove</strong> Removes selected base layer.<br> <strong>Move up</strong> Change the order of base layers by moving this base layer up.<br> <strong>Move down</strong> Change the order of base layers by moving this base layer down.'}\"> <i class=\"icon-question-sign\"></i> </a> </th> </tr> </thead> <tbody> <!-- ko foreach: baseLayers --> <tr> <td> <!-- ko text:code --> <!-- /ko --> </td> <td> <input class=\"full-width-input\" type=\"text\" data-bind=\"value: displayText\"/> </td> <td> <input type=\"radio\" name=\"defaultBaseMap\" data-bind=\"checked: $parent.codeChecked, value: code\"/> </td> <td> <div class=\"row-fluid\"> <div class=\"span12\"> <button class=\"btn btn-mini btn-default move-up-base-layer margin-top-5\" data-bind=\"click: moveUp, enable: canMoveUp($data)\"><i class=\"icon-arrow-up\"></i> Move up </button> <button class=\"btn btn-mini btn-default move-down-base-layer margin-top-5\" data-bind=\"click: moveDown, enable: canMoveDown($data)\"><i class=\"icon-arrow-down\"></i> Move down </button> </div> </div> <div class=\"row-fluid\"> <div class=\"span12\"> <button class=\"btn btn-mini btn-danger margin-top-5\" data-bind=\"click: removeBaseLayer\"><i class=\"icon-minus icon-white remove-base-layer\"></i> Remove</button> </div> </div> </td> </tr> <!-- /ko --> <tr data-bind=\"if: baseLayers().length == 0\"> <td colspan=\"4\"> No base layer selected. </td> </tr> </tbody> </table> </div> </div> </div> <div class=\"span7 bg-selected-color\"> <h4>Overlays</h4> <div class=\"row-fluid\"> <div class=\"span12\"> <div class=\"form-horizontal\"> <div class=\"control-group\"> <div class=\"control-label\"> Choose overlay <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'Select an overlay e.g. Australian Coral Ecoregions, Local Gov. Areas etc.'}\"> <i class=\"icon-question-sign\"></i> </a> </div> <div class=\"controls\"> <select data-bind=\"options: allOverlays, optionsText: 'title', value: selectedOverlay, optionCaption: 'Choose overlay ...'\"></select> <button class=\"btn btn-default add-overlay\" data-bind=\"click: addOverlayClickHandler, disable: allOverlays().length == 0\"><i class=\"icon icon-plus\"></i> Add </button> </div> </div> </div> <table class=\"table table-bordered\"> <thead> <tr> <th> Name </th> <th> Display name <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'Change that text appearing on the layer selection panel'}\"> <i class=\"icon-question-sign\"></i> </a> </th> <th> Is selected<br/>by default? <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'The selected overlay will be shown on map by default. Others are available for selection on the layer control (present on map at top right corner)'}\"> <i class=\"icon-question-sign\"></i> </a> </th> <th> Opacity <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'Opacity of the overlay when displayed on map'}\"> <i class=\"icon-question-sign\"></i> </a> </th> <th> Actions <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'<strong>Remove</strong> Removes selected overlay.<br> <strong>Move up</strong> Change the order of overlays by moving this overlay up.<br> <strong>Move down</strong> Change the order of overlays by moving this overlay down.<br> <strong>More settings</strong> Show or hide overlay options'}\"> <i class=\"icon-question-sign\"></i> </a> </th> </tr> </thead> <tbody> <!-- ko foreach: overlays --> <tr> <td><!-- ko text:alaName --> <!-- /ko --></td> <td><input class=\"full-width-input\" type=\"text\" data-bind=\"value: title\"/></td> <td><input type=\"checkbox\" data-bind=\"checked: defaultSelected\"/></td> <td> <div class=\"row-fluid\"> <div class=\"span12\"> <div class=\"slider\" data-bind=\"slider: {min: 0, max: 1, step:0.1, model: opacity}\"></div> </div> </div> <td> <div class=\"row-fluid\"> <div class=\"span12\"> <button class=\"btn btn-mini btn-default move-up-overlay margin-top-5\" data-bind=\"click: moveUp, enable: canMoveUp($data)\"><i class=\"icon-arrow-up\"></i> Move up </button> <button class=\"btn btn-mini btn-default move-up-overlay margin-top-5\" data-bind=\"click: moveDown, enable: canMoveDown($data)\"><i class=\"icon-arrow-down\"></i> Move down </button> </div> </div> <div class=\"row-fluid\"> <div class=\"span12\"> <!-- ko if: Biocollect.MapUtilities.isContextualLayer(alaId) || $parent.showAdvancedFeatures --> <button class=\"btn btn-mini btn-default margin-top-5\" data-toggle=\"collapse\" data-bind=\"attr: {'data-target': '#overlay-' + $index()},click: $parent.noDefaultAction\"> More settings </button> <!-- /ko --> <button class=\"btn btn-mini btn-danger margin-top-5\" data-bind=\"click: removeOverlay\"><i class=\"icon-minus icon-white remove-overlay\"></i> Remove </button> </div> </div> </td> </tr> <!-- ko if: Biocollect.MapUtilities.isContextualLayer(alaId) || $parent.showAdvancedFeatures --> <tr> <td colspan=\"5\"> <div class=\"form-horizontal collapse\" data-bind=\"attr: {id: 'overlay-' + $index()}\"> <!-- ko if: Biocollect.MapUtilities.isContextualLayer(alaId) --> <div class=\"control-group\"> <label class=\"control-label\"> Change the colour of overlay? <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'It is possible to change the rendering of a contextual layer e.g. Australian state and territories.'}\"> <i class=\"icon-question-sign\"></i> </a> </label> <div class=\"controls\"> <input type=\"checkbox\" data-bind=\"checked: changeLayerColour\"/> </div> </div> <!-- ko if: changeLayerColour --> <div class=\"control-group\"> <label class=\"control-label\"> Border colour <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'Overlay can have many shapes. Set border colour of the shape.'}\"> <i class=\"icon-question-sign\"></i> </a> </label> <div class=\"controls\"> <input type=\"text\" data-bind=\"value: boundaryColour\" placeholder=\"hex colour e.g. #fdb863\"/> </div> </div> <div class=\"control-group\"> <label class=\"control-label\"> Fill colour <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'Set fill colour of the shape'}\"> <i class=\"icon-question-sign\"></i> </a> </label> <div class=\"controls\"> <input type=\"text\" data-bind=\"value: fillColour\" placeholder=\"hex colour e.g. #fdb863\"/> </div> </div> <!-- /ko --> <div class=\"control-group\"> <label class=\"control-label\"> Display label on overlay <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'The value of each shape can be displayed on the map. Check to display the text on overlay.'}\"> <i class=\"icon-question-sign\"></i> </a> </label> <div class=\"controls\"> <input type=\"checkbox\" data-bind=\"checked: showPropertyName\"/> </div> </div> <div data-bind=\"slideVisible: showPropertyName\"> <div class=\"control-group\"> <label class=\"control-label\"> Colour of label text <a href=\"#\" class=\"helphover\" data-bind=\"popover: {content:'Set label colour'}\"> <i class=\"icon-question-sign\"></i> </a> </label> <div class=\"controls\"> <input type=\"text\" data-bind=\"value: textColour\" placeholder=\"hex colour e.g. #fdb863\"/> </div> </div> </div> <!-- /ko --> <!-- ko if: $parent.showAdvancedFeatures --> <div class=\"control-group\"> <label class=\"control-label\">User restriction</label> <div class=\"controls\"> <select data-bind=\"value: userAccessRestriction\"> <option value=\"anyUser\" selected>Any user</option> <option value=\"loggedInUser\" selected>Logged in user</option> </select> </div> </div> <div class=\"control-group\"> <label class=\"control-label\">In layer shape list</label> <div class=\"controls\"> <input type=\"checkbox\" data-bind=\"checked: inLayerShapeList\"/> </div> </div> <!-- /ko --> </div> </td> </tr> <!-- /ko --> <!-- /ko --> <tr data-bind=\"visible: overlays().length == 0\"> <td colspan=\"5\"> No overlay selected. </td> </tr> </tbody> </table> </div> </div> </div></div><div class=\"row-fluid\" data-bind=\"slideVisible: (baseLayers().length > 0 || overlays().length > 0) && showMap()\"> <div class=\"span12\"> <h4>Map preview</h4> <div id=\"previewBaseLayer\" style=\"width: 100%; height: 500px\" data-bind=\"attr: {'data-leaflet-img': fcConfig.leafletAssetURL}\"> </div> </div></div><div class=\"row-fluid\"> <div class=\"span12\"> <div class=\"alert alert-info\"> <div class=\"row-fluid\"> <div class=\"span5\"> <h5><strong>Base Layer Help!</strong></h5> <p> To control the appearance of the map users will see, do the following: </p> <ol> <li class=\"alert-info\"> Select the base layer(s) that you want users to be able choose from. </li> <li class=\"alert-info\"> Select which one of the layers you want to display on forms by default. </li> <li class=\"alert-info\"> Move the display sequence of available layers up/down as required. </li> </ol> </div> <div class=\"span7\"> <h5><strong>Overlay Help!</strong></h5> <p> If you want to change the default overlay selections, please follow steps 1-3 as per base layer settings. Note that you can select multiple overlays to display by default. You can also change the opacity (transparency) of each layer. Limited styling of layers is also available. </p> </div> </div> </div> </div></div>");
\ No newline at end of file
diff --git a/grails-app/assets/javascripts/facets.js b/grails-app/assets/javascripts/facets.js
index 601df9bd..dbb221c7 100644
--- a/grails-app/assets/javascripts/facets.js
+++ b/grails-app/assets/javascripts/facets.js
@@ -215,7 +215,7 @@ function FilterViewModel(config){
                 sanitisedList.push(item)
             }
         })
-        parent.resetPageOffSet();
+        parent.resetPageOffSet && parent.resetPageOffSet();
 
         self.selectedFacets.push.apply(self.selectedFacets, sanitisedList);
         self.hideAllTerms(sanitisedList);
diff --git a/grails-app/assets/javascripts/forms-manifest.js b/grails-app/assets/javascripts/forms-manifest.js
index 470b59f9..1e3349b5 100644
--- a/grails-app/assets/javascripts/forms-manifest.js
+++ b/grails-app/assets/javascripts/forms-manifest.js
@@ -21,6 +21,8 @@
 // emitter
 //= require emitter/emitter.js
 
+//= require jquery.fileDownload/jQuery.fileDownload
+
 // image-viewer
 //= require fancybox/jquery.fancybox.js
 //= require ala-image-viewer.js
diff --git a/grails-app/assets/javascripts/hubs.js b/grails-app/assets/javascripts/hubs.js
index 4fd2603d..3290a1ac 100644
--- a/grails-app/assets/javascripts/hubs.js
+++ b/grails-app/assets/javascripts/hubs.js
@@ -20,7 +20,7 @@ var HubSettingsViewModel = function (programsModel, options) {
 
     self.transients = {
         programNames: programNames,
-        availableSkins: ['nrm', 'ala2', 'mdba', 'ala', 'configurableHubTemplate1', 'lu'],
+        availableSkins: ['nrm', 'ala2', 'mdba', 'ala', 'configurableHubTemplate1'],
         configurableTemplates: ['configurableHubTemplate1'],
         defaultHomePage: '/project/citizenScience',
         hubHomePage: '/hub/index'
diff --git a/grails-app/assets/javascripts/knockout-custom-bindings.js b/grails-app/assets/javascripts/knockout-custom-bindings.js
index ff2e486b..3694fb4b 100644
--- a/grails-app/assets/javascripts/knockout-custom-bindings.js
+++ b/grails-app/assets/javascripts/knockout-custom-bindings.js
@@ -296,9 +296,7 @@ ko.bindingHandlers.stagedImageUpload = {
             size(data.total);
         }).on('fileuploaddone', function (e, data) {
 
-            var resultText = $('pre', data.result).text();
-            var result = $.parseJSON(resultText);
-
+            var result = data.result;
             if (!result) {
                 result = {};
                 error('No response from server');
diff --git a/grails-app/assets/javascripts/permissionTable.js b/grails-app/assets/javascripts/permissionTable.js
index 3165efc5..e7ce904a 100644
--- a/grails-app/assets/javascripts/permissionTable.js
+++ b/grails-app/assets/javascripts/permissionTable.js
@@ -11,7 +11,7 @@ function initialise(roles, currentUserId, projectId) {
             data: 'userId',
             name: 'userId',
             bSortable: false
-            },
+        },
             {
                 data: 'displayName',
                 name: 'displayName',
@@ -38,26 +38,16 @@ function initialise(roles, currentUserId, projectId) {
                 },
                 bSortable: false
             },
-            {
-                data: null, // can be null or undefined
-                defaultContent: "<i>02764</i>",
-                bSortable: false
-            },
-            {
-                data: null, // can be null or undefined
-                defaultContent: "<i>Yes</i>",
-                bSortable: false
-
-            },
             {
                 render: function (data, type, row) {
                     // cannot delete the last admin
                     if (table.ajax.json().totalNbrOfAdmins == 1 && row.role == "admin") {
                         return '';
                     } else {
-                        return '<div class="pull-right margin-right-20">' + '<a class="margin-left-10" href="" title="view this user\'s details"><i class="fa fa-eye"></i></a>' +
-                        '<a class="margin-left-10" href="" title="edit this user and role combination"><i class="fa fa-edit"></i></a>' +
-                        '<a class="margin-left-10" href="" title="remove this user and role combination"><i class="fa fa-remove"></i></a></div>';
+                        var buttons = '<a class="btn btn-small tooltips href="" title="view this user\'s details"><i class="icon-eye"></i></a>' +
+                            '<a class="btn btn-small tooltips href="" title="edit this user and role combination"><i class="icon-edit"></i></a>' +
+                            '<a class="btn btn-small tooltips href="" title="remove this user and role combination"><i class="icon-remove"></i></a>';
+                        return buttons;
                     }
                 },
                 bSortable: false
diff --git a/grails-app/assets/javascripts/projectActivities.js b/grails-app/assets/javascripts/projectActivities.js
index c395a587..fd90a36b 100644
--- a/grails-app/assets/javascripts/projectActivities.js
+++ b/grails-app/assets/javascripts/projectActivities.js
@@ -206,7 +206,7 @@ var ProjectActivitiesSettingsViewModel = function (pActivitiesVM, placeHolder) {
         } else if (current.isInfoValid() &&
             current.areSpeciesValid() &&
             jsData.pActivityFormName &&
-            (jsData.sites && jsData.sites.length > 0)
+            current.isSiteConfigValid()
         ) {
             jsData.published = true;
             return self.publish(jsData);
@@ -254,8 +254,8 @@ var ProjectActivitiesSettingsViewModel = function (pActivitiesVM, placeHolder) {
     };
 
     self.saveSitesBeforeRedirect = function(redirectUrl) {
-        var jsData = self.current().asJS("sites");
-        if (jsData.sites && jsData.sites.length > 0) {
+        var current = self.current();
+        if (current && current.isSiteConfigValid()) {
             self.genericUpdate("sites");
         }
         window.location.href = redirectUrl;
diff --git a/grails-app/assets/javascripts/projectActivity.js b/grails-app/assets/javascripts/projectActivity.js
index 9ac7cf83..ef5afaf0 100644
--- a/grails-app/assets/javascripts/projectActivity.js
+++ b/grails-app/assets/javascripts/projectActivity.js
@@ -879,6 +879,25 @@ var ProjectActivity = function (params) {
             return "Configuration not valid - At least one site must be selected."
         }
     };
+
+    self.isSiteConfigValid = function () {
+        var msg
+        if (['sitecreate', 'sitepickcreate'].indexOf(self.surveySiteOption()) > -1) {
+            msg = self.isUserSiteCreationConfigValid();
+            if (msg) {
+                return false;
+            }
+        }
+
+        if (['sitepick', 'sitepickcreate'].indexOf(self.surveySiteOption()) > -1) {
+            msg = self.isSiteSelectionConfigValid();
+            if (msg) {
+                return false;
+            }
+        }
+
+        return true;
+    }
 };
 
 var SiteList = function (o, surveySites, pActivity) {
diff --git a/grails-app/assets/javascripts/systematicSites.js b/grails-app/assets/javascripts/systematicSites.js
deleted file mode 100644
index e04a7be1..00000000
--- a/grails-app/assets/javascripts/systematicSites.js
+++ /dev/null
@@ -1,734 +0,0 @@
-'use strict';
-
-var SiteViewModel = function (mapContainerId, site, mapOptions) {
-    var self = $.extend(this, new Documents());
-
-    var pointOfInterestIcon = ALA.MapUtils.createIcon("https://maps.google.com/mapfiles/marker_yellow.png");
-    var pointOfInterestMarkers = new L.FeatureGroup();
-    var latSubscriber = null;
-    var lngSubscriber = null;
-
-    self.transients = {
-        loadingGazette: ko.observable(false)
-    };
-    self.site = ko.observable({
-        name: ko.observable(),
-        siteId: ko.observable(),
-        externalId: ko.observable(),
-        catchment: ko.observable(),
-        type: ko.observable(),
-        area: ko.observable(),
-        description: ko.observable(),
-        notes: ko.observable(),
-        projects: ko.observableArray(),
-        extent: ko.observable({
-            source: ko.observable(),
-            geometry:  ko.observable({
-                decimalLatitude: ko.observable(),
-                decimalLongitude: ko.observable(),
-                uncertainty: ko.observable(),
-                precision: ko.observable(),
-                datum: ko.observable(),
-
-                type: ko.observable(),
-                nrm: ko.observable(),
-                state: ko.observable(),
-                lga: ko.observable(),
-                locality: ko.observable(),
-                mvg: ko.observable(),
-                mvs: ko.observable(),
-
-                radius: ko.observable(),
-                areaKmSq: ko.observable(),
-                coordinates: ko.observable(),
-                centre: ko.observable(),
-
-                bbox: ko.observable(),
-                pid: ko.observable(),
-                name: ko.observable(),
-                fid: ko.observable(),
-                layerName: ko.observable()
-            })
-        })
-    });
-    self.pointsOfInterest = ko.observableArray();
-    self.showPointAttributes = ko.observable(false);
-    self.allowPointsOfInterest = ko.observable(mapOptions.allowPointsOfInterest || false);
-    self.displayAreaInReadableFormat = null;
-
-    self.site().extent().geometry().areaKmSq.subscribe(function(val){
-        self.site().area(val)
-    });
-
-    self.loadSite = function (site) {
-        var siteModel = self.site();
-        siteModel.name(exists(site, "name"));
-        siteModel.siteId(exists(site, "siteId"));
-        siteModel.externalId(exists(site, "externalId"));
-        siteModel.catchment(exists(site, "catchment"));
-        siteModel.type(exists(site, "type"));
-        siteModel.area(exists(site, "area"));
-        siteModel.description(exists(site, "description"));
-        siteModel.notes(exists(site, "notes"));
-        siteModel.projects(site.projects || []);
-
-        if (site.extent) {
-            self.site().extent().source(exists(site.extent, "source"));
-            self.loadGeometry(site.extent.geometry || {});
-        } else {
-            self.site().extent().source('');
-            self.loadGeometry({});
-        }
-
-        if(self.site().extent().geometry().areaKmSq()){
-            self.site().area(self.site().extent().geometry().areaKmSq())
-        }
-
-        if (!_.isEmpty(site.poi)) {
-            site.poi.forEach(function (poi) {
-                createPointOfInterest(poi, self.hasPhotoPointDocuments(poi))
-            });
-        }
-
-        self.displayAreaInReadableFormat = ko.computed(function(){
-            if(self.site().area()){
-                return convertKMSqToReadableUnit(self.site().area())
-            }
-        });
-    };
-
-    self.hasPhotoPointDocuments = function (poi) {
-        if (!self.site.documents) {
-            return;
-        }
-        var hasDoc = false;
-        $.each(self.site.documents, function (i, doc) {
-            if (doc.poiId === poi.poiId) {
-                hasDoc = true;
-                return false;
-            }
-        });
-        return hasDoc;
-    };
-
-    self.loadGeometry = function (geometry) {
-        var geometryObservable = self.site().extent().geometry();
-        geometryObservable.decimalLatitude(exists(geometry, 'decimalLatitude')),
-        geometryObservable.decimalLongitude(exists(geometry, 'decimalLongitude')),
-        geometryObservable.uncertainty(exists(geometry, 'uncertainty')),
-        geometryObservable.precision(exists(geometry, 'precision')),
-        geometryObservable.datum(exists(geometry, 'datum')),
-        geometryObservable.type(exists(geometry, 'type')),
-        geometryObservable.nrm(exists(geometry, 'nrm')),
-        geometryObservable.state(exists(geometry, 'state')),
-        geometryObservable.lga(exists(geometry, 'lga')),
-        geometryObservable.locality(exists(geometry, 'locality')),
-        geometryObservable.mvg(exists(geometry, 'mvg')),
-        geometryObservable.mvs(exists(geometry, 'mvs')),
-        geometryObservable.radius(exists(geometry, 'radius')),
-        geometryObservable.areaKmSq(exists(geometry, 'areaKmSq')),
-        geometryObservable.coordinates(exists(geometry, 'coordinates')),
-        geometryObservable.centre(exists(geometry, 'centre')),
-        geometryObservable.bbox(exists(geometry, 'bbox')),
-        geometryObservable.pid(exists(geometry, 'pid')),
-        geometryObservable.name(exists(geometry, 'name')),
-        geometryObservable.fid(exists(geometry, 'fid')),
-        geometryObservable.layerName(exists(geometry, 'layerName'))
-
-        latSubscriber = geometryObservable.decimalLatitude.subscribe(updateSiteMarkerPosition);
-        lngSubscriber = geometryObservable.decimalLongitude.subscribe(updateSiteMarkerPosition);
-
-        if (!_.isEmpty(geometry) && self.site().extent().source() != 'none') {
-            var validGeoJson = Biocollect.MapUtilities.featureToValidGeoJson(geometry);
-            self.map.setGeoJSON(validGeoJson);
-            self.showPointAttributes(geometry.type == "Point");
-        }
-        loadGazetteInformation(geometryObservable.decimalLatitude(), geometryObservable.decimalLongitude());
-
-        return geometryObservable;
-    };
-
-    self.newPointOfInterest = function () {
-        var centre = self.map.getCentre();
-        createPointOfInterest({
-            name: "Point of interest #" + (self.pointsOfInterest().length + 1),
-            geometry: {
-                decimalLatitude: centre.lat,
-                decimalLongitude: centre.lng
-            }
-        }, false);
-    };
-
-    self.refreshCoordinates = function () {
-        updateSiteMarkerPosition();
-    };
-
-    function createPointOfInterest(poi, hasDocuments) {
-        var pointOfInterest = new PointOfInterest(poi, hasDocuments);
-
-        pointOfInterest.geometry().decimalLatitude.subscribe(self.renderPointsOfInterest);
-        pointOfInterest.geometry().decimalLongitude.subscribe(self.renderPointsOfInterest);
-
-        pointOfInterest.marker = ALA.MapUtils.createMarker(poi.geometry.decimalLatitude, poi.geometry.decimalLongitude, pointOfInterest.name, {
-            icon: pointOfInterestIcon,
-            draggable: true
-        });
-        pointOfInterest.marker.on("dragend", pointOfInterest.dragEvent);
-        pointOfInterestMarkers.addLayer(pointOfInterest.marker);
-
-        self.pointsOfInterest.push(pointOfInterest);
-    }
-
-    self.renderPointsOfInterest = function () {
-        pointOfInterestMarkers.clearLayers();
-
-        self.pointsOfInterest().forEach(function (pointOfInterest) {
-            var marker  = ALA.MapUtils.createMarker(
-                pointOfInterest.geometry().decimalLatitude(),
-                pointOfInterest.geometry().decimalLongitude(),
-                pointOfInterest.name,
-                {icon: pointOfInterestIcon, draggable: true}
-            );
-
-            marker.on("dragend", pointOfInterest.dragEvent);
-
-            pointOfInterestMarkers.addLayer(marker);
-        });
-    };
-
-    self.removePointOfInterest = function (pointOfInterest) {
-        if (pointOfInterest.hasPhotoPointDocuments) {
-            return;
-        }
-        self.pointsOfInterest.remove(pointOfInterest);
-        self.renderPointsOfInterest();
-    };
-
-    self.toJS = function() {
-        var js = ko.toJS(self.site);
-
-        // legacy support - it was possible to have no extent for a site. This step will delete geometry before saving.
-        if(js.extent.source == 'none'){
-            delete js.extent.geometry;
-        }
-
-        js.poi = [];
-        self.pointsOfInterest().forEach(function (poi) {
-            js.poi.push(poi.toJSON())
-        });
-        js.geoIndex = Biocollect.MapUtilities.constructGeoIndexObject(js);
-
-        return js;
-    };
-
-    self.modelAsJSON = function () {
-        return JSON.stringify(self.toJS());
-    };
-
-    self.saved = function () {
-        return self.site().siteId();
-    };
-
-    self.isValid = function(mandatory) {
-        var valid = true;
-
-        if (mandatory) {
-            var js = self.toJS();
-            valid = js && js.extent && js.extent.geometry && js.extent.geometry.type && js.extent.geometry.type != null && js.extent.geometry.type != "";
-        }
-
-        return valid;
-    };
-
-    function initialiseViewModel() {
-        var overlayLayersMapControlConfig = Biocollect.MapUtilities.getOverlayConfig();
-        var baseLayersAndOverlays = Biocollect.MapUtilities.getBaseLayerAndOverlayFromMapConfiguration(fcConfig.mapLayersConfig);
-        var options =  {
-            autoZIndex: false,
-            preserveZIndex: true,
-            addLayersControlHeading: true,
-            maxZoom: 20,
-            wmsLayerUrl: mapOptions.spatialWms + "/wms/reflect?",
-            wmsFeatureUrl: mapOptions.featureService + "?featureId=",
-            drawOptions: mapOptions.drawOptions,
-            showReset: false,
-            baseLayer: baseLayersAndOverlays.baseLayer,
-            otherLayers: baseLayersAndOverlays.otherLayers,
-            overlays: baseLayersAndOverlays.overlays,
-            overlayLayersSelectedByDefault: baseLayersAndOverlays.overlayLayersSelectedByDefault
-        };
-
-        for (var option in mapOptions) {
-            if (mapOptions.hasOwnProperty(option)){
-                options[option] = mapOptions[option];
-            }
-        }
-
-        if(mapOptions.readonly){
-            var readonlyProps = {
-                drawControl: false,
-                singleMarker: false,
-                useMyLocation: false,
-                allowSearchLocationByAddress: false,
-                allowSearchRegionByAddress: false,
-                draggableMarkers: false,
-                showReset: false
-            };
-            for(var prop in readonlyProps){
-                options[prop] = readonlyProps[prop]
-            }
-        }
-
-        self.map = new ALA.Map(mapContainerId, options);
-
-        if(!mapOptions.readonly){
-            var regionSelector = Biocollect.MapUtilities.createKnownShapeMapControl(self.map, mapOptions.featuresService, mapOptions.regionListUrl);
-            self.map.addControl(regionSelector);
-        }
-
-        self.map.addButton("<span class='fa fa-undo reset-map' title='Reset map'></span>", function () {
-            self.map.resetMap();
-            pointOfInterestMarkers.clearLayers();
-            self.pointsOfInterest([]);
-            self.loadGeometry({});
-            self.loadSite(site || {});
-        }, "bottomright");
-
-
-
-        self.map.registerListener("draw:created", function (event) {
-            if (event.layerType == ALA.MapConstants.LAYER_TYPE.MARKER) {
-                updatePointLatLng(event.layer.getLatLng().lat, event.layer.getLatLng().lng);
-            }
-        });
-
-        // We'll track the points of interest as a separate feature group manually attached to the underlying map
-        // implementation so that we can take advantage of the single-layer controls provided by ALA.Map to control the
-        // site region.
-        self.map.getMapImpl().addLayer(pointOfInterestMarkers);
-
-        self.loadSite(site);
-
-        self.map.subscribe(listenToSiteChanges);
-    }
-
-    function getSiteMarker() {
-        return self.map.getAllMarkers().length == 1 ? self.map.getAllMarkers()[0] : null;
-    }
-
-    function listenToSiteChanges() {
-        var siteMarker = getSiteMarker();
-
-        if (siteMarker) {
-            siteMarker.bindPopup(self.site().name());
-            siteMarker.on("dragend", function (event) {
-                updatePointLatLng(event.target.getLatLng().lat, event.target.getLatLng().lng);
-            });
-            updatePointLatLng(siteMarker.getLatLng().lat, siteMarker.getLatLng().lng);
-
-            self.map.fitBounds();
-
-            self.showPointAttributes(true);
-        } else {
-            var bounds = self.map.getBounds();
-            updatePointLatLng(bounds ? bounds.getCenter().lat : null, bounds ? bounds.getCenter().lng : null);
-            self.showPointAttributes(false);
-        }
-
-        updateGeometry();
-    }
-
-    function updatePointLatLng(lat, lng) {
-        latSubscriber.dispose();
-        lngSubscriber.dispose();
-        if (self.site() && self.site().extent) {
-            self.site().extent().geometry().decimalLatitude(lat);
-            self.site().extent().geometry().decimalLongitude(lng);
-            latSubscriber = self.site().extent().geometry().decimalLatitude.subscribe(updateSiteMarkerPosition);
-            lngSubscriber = self.site().extent().geometry().decimalLongitude.subscribe(updateSiteMarkerPosition);
-        }
-    }
-
-    function updateSiteMarkerPosition() {
-        var siteMarker = getSiteMarker();
-
-        var geometry = self.site().extent().geometry();
-        if (siteMarker && geometry.decimalLatitude() && geometry.decimalLongitude()) {
-            siteMarker.setLatLng(new L.LatLng(geometry.decimalLatitude(), geometry.decimalLongitude()));
-            self.map.fitBounds();
-            loadGazetteInformation(geometry.decimalLatitude(), geometry.decimalLongitude());
-        }
-    }
-
-    function updateGeometry() {
-        var geoJson = self.map.getGeoJSON();
-
-        if (geoJson && geoJson.features && geoJson.features.length > 0) {
-            var feature = geoJson.features[0];
-            var geometryType = feature.geometry.type;
-            var latLng = null;
-            var lat;
-            var lng;
-            var bounds = self.map.getBounds();
-            if (geometryType === ALA.MapConstants.DRAW_TYPE.POINT_TYPE) {
-                // the ALA Map plugin uses valid GeoJSON, which specifies coordinates as [lng, lat]
-                lat = feature.geometry.coordinates[1];
-                lng = feature.geometry.coordinates[0];
-                self.site().extent().geometry().centre(latLng);
-            } else if (bounds) {
-                lat = bounds.getCenter().lat;
-                lng = bounds.getCenter().lng;
-            }
-
-            var geoType = determineExtentType(feature);
-            self.site().extent().geometry().type(geoType);
-            self.site().extent().source(geoType == "Point" ? "Point" : geoType == "pid" ? "pid" : "drawn");
-            self.site().extent().geometry().radius(feature.properties.radius);
-
-            // the feature created by a WMS layer will have the area in the 'area_km' property
-            if (feature.properties.area_km) {
-                self.site().extent().geometry().areaKmSq(feature.properties.area_km);
-            } else {
-                self.site().extent().geometry().areaKmSq(ALA.MapUtils.calculateAreaKmSq(feature));
-            }
-            self.site().extent().geometry().coordinates(feature.geometry.coordinates);
-
-            self.site().extent().geometry().bbox(exists(feature.properties, 'bbox'));
-            self.site().extent().geometry().pid(exists(feature.properties, 'pid'));
-            self.site().extent().geometry().name(exists(feature.properties, 'name'));
-            self.site().extent().geometry().fid(exists(feature.properties, 'fid'));
-            self.site().extent().geometry().layerName(exists(feature.properties, 'fieldname'));
-
-            loadGazetteInformation(lat, lng);
-        } else {
-            self.loadGeometry({});
-        }
-    }
-
-    function loadGazetteInformation(lat, lng) {
-        if (!_.isUndefined(lat) && lat && !_.isUndefined(lng) && lng) {
-            self.transients.loadingGazette(true);
-            $.ajax({
-                url: fcConfig.siteMetaDataUrl + "?lat=" + lat + "&lon=" + lng,
-                dataType: "json"
-            }).done(function (data) {
-                self.site().extent().geometry().nrm(exists(data, 'nrm'));
-                self.site().extent().geometry().state(exists(data, 'state'));
-                self.site().extent().geometry().lga(exists(data, 'lga'));
-                self.site().extent().geometry().locality(exists(data, 'locality'));
-                self.site().extent().geometry().mvg(exists(data, 'mvg'));
-                self.site().extent().geometry().mvs(exists(data, 'mvs'));
-            }).always(function (data) {
-                self.transients.loadingGazette(false);
-            });
-        }
-    }
-
-    function determineExtentType(geoJsonFeature) {
-        var type = null;
-
-        if (geoJsonFeature.geometry.type === ALA.MapConstants.DRAW_TYPE.POINT_TYPE) {
-            if (geoJsonFeature.properties.radius) {
-                type = ALA.MapConstants.DRAW_TYPE.CIRCLE_TYPE;
-            } else {
-                type = ALA.MapConstants.DRAW_TYPE.POINT_TYPE;
-            }
-        } else if (geoJsonFeature.geometry.type === ALA.MapConstants.DRAW_TYPE.POLYGON_TYPE) {
-            if (geoJsonFeature.properties.pid) {
-                type = "pid";
-            } else {
-                type = ALA.MapConstants.DRAW_TYPE.POLYGON_TYPE;
-            }
-        } else if (geoJsonFeature.geometry.type == ALA.MapConstants.DRAW_TYPE.LINE_TYPE) {
-            type = geoJsonFeature.geometry.type
-        }
-
-        return type;
-    }
-
-    initialiseViewModel();
-};
-
-var PointOfInterest = function (data, hasDocuments) {
-    var self = this;
-
-    self.marker = null;
-    self.poiId = ko.observable(exists(data, 'poiId'));
-    self.name = ko.observable(exists(data, 'name'));
-    self.type = ko.observable(exists(data, 'type'));
-    self.description = ko.observable(exists(data, 'description'));
-
-    if (!_.isUndefined(data.geometry)) {
-        self.geometry = ko.observable({
-            type: ALA.MapConstants.DRAW_TYPE.POINT_TYPE,
-            decimalLatitude: ko.observable(exists(data.geometry, 'decimalLatitude')),
-            decimalLongitude: ko.observable(exists(data.geometry, 'decimalLongitude')),
-            uncertainty: ko.observable(exists(data.geometry, 'uncertainty')),
-            precision: ko.observable(exists(data.geometry, 'precision')),
-            datum: ko.observable(exists(data.geometry, 'datum')),
-            bearing: ko.observable(exists(data.geometry, 'bearing'))
-        });
-    }
-    self.hasPhotoPointDocuments = hasDocuments;
-
-    self.dragEvent = function (event) {
-        var lat = event.target.getLatLng().lat;
-        var lng = event.target.getLatLng().lng;
-        self.geometry().decimalLatitude(lat);
-        self.geometry().decimalLongitude(lng);
-    };
-
-    self.hasCoordinate = function () {
-        return !isNaN(self.geometry().decimalLatitude()) && !isNaN(self.geometry().decimalLongitude());
-    };
-
-    self.toJSON = function () {
-        var js = {
-            poiId: self.poiId(),
-            name: self.name(),
-            type: self.type(),
-            description: self.description(),
-            geometry: ko.toJS(self.geometry)
-        };
-
-        if (self.hasCoordinate()) {
-            js.geometry.coordinates = [js.geometry.decimalLatitude, js.geometry.decimalLongitude];
-        }
-        return js;
-    };
-};
-
-
-
-var SitesViewModel =  function(sites, map, mapFeatures, isUserEditor, projectId, projectDefaultZoomArea) {
-
-    var self = this;
-    // sites
-    var features = [];
-    if (mapFeatures.features) {
-        features = mapFeatures.features;
-    }
-
-    self.sites = $.map(sites, function (site, i) {
-        var feature = features[i] || site.extent ? site.extent.geometry : null;
-        site.feature = feature;
-        site.selected = ko.observable(false);
-        return site;
-    });
-    self.selectedSiteIds = ko.computed(function() {
-        var siteIds = [];
-        $.each(self.sites, function(i, site) {
-            if (site.selected()) {
-                siteIds.push(site.siteId);
-            }
-        });
-        return siteIds;
-    });
-    self.sitesFilter = ko.observable("");
-    self.throttledFilter = ko.computed(self.sitesFilter).extend({throttle: 400});
-    self.filteredSites = ko.observableArray(self.sites);
-    self.displayedSites = ko.observableArray();
-    self.offset = ko.observable(0);
-    self.pageSize = 10;
-    self.isUserEditor = ko.observable(isUserEditor);
-    self.getSiteName = function (siteId) {
-        var site;
-        if (siteId !== undefined && siteId !== '') {
-            site = $.grep(self.sites, function (obj, i) {
-                return (obj.siteId === siteId);
-            });
-            if (site.length > 0) {
-                return site[0].name();
-            }
-        }
-        return '';
-    };
-    // Animation callbacks for the lists
-    self.showElement = function (elem) {
-        if (elem.nodeType === 1) $(elem).hide().slideDown()
-    };
-    self.hideElement = function (elem) {
-        if (elem.nodeType === 1) $(elem).slideUp(function () {
-            $(elem).remove();
-        })
-    };
-
-    var previousIndicies = [];
-    function compareIndicies(indicies1, indicies2) {
-
-        if (indicies1 == indicies2) {
-            return true;
-        }
-
-        if (indicies1.length != indicies2.length) {
-            return false;
-        }
-        for (var i=0; i<indicies1.length; i++) {
-            if (indicies1[i] != indicies2[i]) {
-                return false;
-            }
-        }
-        return true;
-    }
-    /** Callback from datatables event listener so we can keep the map in sync with the table filter / pagination */
-    self.sitesFiltered = function(indicies) {
-        if (compareIndicies(indicies || [], previousIndicies)) {
-            return;
-        }
-        self.displayedSites([]);
-        if (indicies) {
-            for (var i=0; i<indicies.length; i++) {
-                self.displayedSites.push(self.sites[indicies[i]]);
-            }
-        }
-        self.displaySites();
-        previousIndicies.splice(0, previousIndicies.length);
-        Array.prototype.push.apply(previousIndicies, indicies);
-
-    };
-
-    self.highlightSite = function(index) {
-        map.highlightFeatureById(self.sites[index].siteId);
-    };
-
-    self.unHighlightSite = function(index) {
-        map.unHighlightFeatureById(self.sites[index].siteId);
-    };
-
-    self.displaySites = function () {
-        map.clearFeatures();
-
-        var features = $.map(self.displayedSites(), function (obj, i) {
-            var f = obj.feature;
-            if (f) {
-                f.popup = obj.name;
-                f.id = obj.siteId;
-            }
-            return f;
-        });
-        map.defaultZoomArea = projectDefaultZoomArea;
-        map.replaceAllFeatures(features);
-        self.removeMarkers();
-
-        $.each(self.displayedSites(), function(i, site) {
-            if (site.poi) {
-                $.each(site.poi, function(j, poi) {
-                    if (poi.geometry) {
-                        self.addMarker(poi.geometry.decimalLatitude, poi.geometry.decimalLongitude, poi.name);
-                    }
-
-                });
-            }
-        });
-
-    };
-
-    var markersArray = [];
-
-    self.addMarker = function(lat, lng, name) {
-
-        var infowindow = new google.maps.InfoWindow({
-            content: '<span class="poiMarkerPopup">' + name +'</span>'
-        });
-
-        var marker = new google.maps.Marker({
-            position: new google.maps.LatLng(lat,lng),
-            title:name,
-            draggable:false,
-            map:map.map
-        });
-
-        marker.setIcon('https://maps.google.com/mapfiles/marker_yellow.png');
-
-        google.maps.event.addListener(marker, 'click', function() {
-            infowindow.open(map.map, marker);
-        });
-
-        markersArray.push(marker);
-    };
-
-    self.removeMarkers = function() {
-        if (markersArray) {
-            for (var i in markersArray) {
-                markersArray[i].setMap(null);
-            }
-        }
-        markersArray = [];
-    };
-
-
-    this.removeSelectedSites = function () {
-        bootbox.confirm("Are you sure you want to remove these sites?", function (result) {
-            if (result) {
-                var siteIds = self.selectedSiteIds();
-
-                $.ajax({
-                    url: fcConfig.sitesDeleteUrl,
-                    type: 'POST',
-                    data: JSON.stringify({siteIds:siteIds}),
-                    contentType: 'application/json'
-                }).done(function(data) {
-                    if (data.warnings && data.warnings.length) {
-                        bootbox.alert("Not all sites were able to be deleted.  Sites associated with an activity were not deleted.", function() {
-                            document.location.href = here;
-                        });
-                    }
-                    else {
-                        document.location.href = here;
-                    }
-                }).fail(function(data) {
-                    bootbox.alert("An error occurred while deleting the sites.  Please contact support if the problem persists.", function() {
-                        document.location.href = here;
-                    })
-                });
-            }
-        });
-    };
-    this.editSite = function (site) {
-        var url = fcConfig.siteEditUrl + '/' + site.siteId + '?returnTo=' + encodeURIComponent(fcConfig.returnTo);
-        document.location.href = url;
-    };
-    this.deleteSite = function (site) {
-        bootbox.confirm("Are you sure you want to remove this site from this project?", function (result) {
-            if (result) {
-
-                $.get(fcConfig.siteDeleteUrl + '?siteId=' + site.siteId, function (data) {
-                    if (data.warnings && data.warnings.length) {
-                        bootbox.alert("The site could not be deleted as it is used by a project activity.");
-                    }
-                    else {
-                        document.location.href = here;
-                    }
-                });
-
-            }
-        });
-    };
-    this.viewSite = function (site) {
-        var url = fcConfig.siteViewUrl + '/' + site.siteId + '?returnTo=' + encodeURIComponent(fcConfig.returnTo);
-        if (projectId) {
-            url += '&projectId='+projectId;
-        }
-        document.location.href = url;
-    };
-    this.addSite = function () {
-        document.location.href = fcConfig.siteCreateUrl;
-    };
-    this.addExistingSite = function () {
-        document.location.href = fcConfig.siteSelectUrl;
-    };
-    this.uploadShapefile = function () {
-        document.location.href = fcConfig.siteUploadUrl;
-    };
-    this.downloadShapefile = function() {
-        window.open(fcConfig.shapefileDownloadUrl, '_blank');
-    };
-    self.triggerGeocoding = function () {
-        ko.utils.arrayForEach(self.sites, function (site) {
-            map.getAddressById(site.name(), site.setAddress);
-        });
-    };
-
-    self.displaySites();
-};
-
diff --git a/grails-app/assets/stylesheets/lu.css b/grails-app/assets/stylesheets/lu.css
deleted file mode 100644
index fd02c6ba..00000000
--- a/grails-app/assets/stylesheets/lu.css
+++ /dev/null
@@ -1,7 +0,0 @@
-/*
- *= require biocollect-banner.css
- */
-
- .form-control, input.form-control, .input-append .add-on {
-    padding: 4px 5px;
-}
\ No newline at end of file
diff --git a/grails-app/conf/application.yml b/grails-app/conf/application.yml
index dbe9ea86..3bc569b0 100644
--- a/grails-app/conf/application.yml
+++ b/grails-app/conf/application.yml
@@ -1,10 +1,12 @@
 ---
 appName:
-  - "biocollect"
+  "biocollect"
 layout:
   skin: "ala2"
 
-loggerLevel: "DEBUG"
+server:
+  session:
+    timeout: 3600
 
 environments:
     development:
@@ -15,46 +17,33 @@ environments:
         #system level config
         server:
            port: 8087
-           serverURL: http://localhost:8087
-#        security:
-#          cas:
-#             appServerName: 'http://canmove-dev.ekol.lu.se:8087'
+           serverURL: http://devt.ala.org.au:8087
         biocollect:
           system:
             email:
-              replyTo: "aleksandra.magdziarek@biol.lu.se"
-              sender: "aleksandra.magdziarek@biol.lu.se"
+              replyTo: "biocollect-dev<no-reply>@ala.org.au"
+              sender: "biocollect-dev@ala.org.au"
         debugUI: true
+        loggerLevel: "DEBUG"
     test:
         grails:
           config:
              locations:
                 - file:///data/biocollect/config/biocollect-config.properties
-        server:
-             serverURL: https://localhost:8087
-        security:
-           cas:
-              appServerName: https://localhost:8087
         debugUI: false
+        loggerLevel: "DEBUG"
     production:
         grails:
             config:
                locations:
                   - file:///data/biocollect/config/biocollect-config.properties
-            #system level config
-        server:
-           #port: 80
-           serverURL: http://localhost:8087
-
-#            security:
-#              cas:
-#                 appServerName: 'http://biocollect.ala.org.au'
         biocollect:
            system:
               email:
-                replyTo: "aleksandra.magdziarek@biol.lu.se"
-                sender: "aleksandra.magdziarek@biol.lu.se"
+                replyTo: "biocollect<no-reply>@ala.org.au"
+                sender: "biocollect-local@ala.org.au"
         debugUI: false
+        loggerLevel: "INFO"
 
 app:
   default:
@@ -68,26 +57,25 @@ app:
 
 security:
    cas:
-      casProperties: "casServerLoginUrl,serverName,centralServer,casServerName,uriFilterPattern,uriExclusionFilter,authenticateOnlyIfLoggedInFilterPattern,casServerLoginUrlPrefix,gateway,casServerUrlPrefix,contextPath,gatewayStorageClass"
+      casProperties: "casServerLoginUrl,serverName,centralServer,casServerName,uriFilterPattern,uriExclusionFilter,uriExclusionFilterPattern,casServerLoginUrlPrefix,gateway,casServerUrlPrefix,contextPath,gatewayStorageClass"
       uriExclusionFilterPattern: "/assets/.*,/images.*,/css.*,/js.*,/less.*,/ajax/bulkLookupQuestions,/uploads/.*"
       authenticateOnlyIfLoggedInPattern: ".*"
-      uriFilterPattern: ".*"
+      uriFilterPattern: ".*/user/.*,.*/site/(?!(index|list|elasticsearch|getImages|getPoiImages|ajaxUpdate|checkSiteName|ajaxList)).*,.*/project/(?!(index|search|citizenScience|listRecordImages|projectSummaryReportCallback)).*,.*/activity/(?!index).*,.*/output/(?!index).*,.*/image/(?!index).*,.*/admin/.*,i.*/proxy/speciesListPost,.*/proxy/documentUpdate,.*/proxy/deleteDocument,.*/home/advanced,.*/organisation/(?!index).*,.*/organisation/(?!list).*,.*/bioActivity/create/.*,.*/bioActivity/edit/.*,.*/bioActivity/list,/sight/.*"
       readOnlyOfficerRole: "ROLE_FC_READ_ONLY"
       alaAdminRole : "ROLE_ADMIN"
       officerRole : "ROLE_FC_OFFICER"
       adminRole : "ROLE_FC_ADMIN"
-      casServerName: "https://auth.bioatlas.se"
-      casServerLoginUrl: "https://auth.bioatlas.se/cas/login"
-      casServerUrlPrefix: "https://auth.bioatlas.se/cas"
-      logoutUrl: "https://auth.bioatlas.se/cas/logout"
+      casServerName: "https://auth.ala.org.au"
+      casServerLoginUrl: "https://auth.ala.org.au/cas/login"
+      casServerUrlPrefix: "https://auth.ala.org.au/cas"
+      logoutUrl: "https://auth.ala.org.au/cas/logout"
 
 #External URL
 aekosEnabled: false
 enableReporting: true
 bugherd:
   integration : false
-# emailFilter: "/[A-Z0-9._%-]+@csiro.au"
-termsOfUseUrl: true
+emailFilter: "/[A-Z0-9._%-]+@csiro.au"
 download:
   email:
     threshold: 100
@@ -98,64 +86,69 @@ facets:
   flimit: 15
 
 
-# aekosSubmission:
-#   url: "http://shared-uat.ecoinformatics.org.au:8080/shared-web/api/submission/create"
-# aekosMintedDoi:
-#   url: "http://shared-uat.aekos.org.au:8080/AEKOS.AekosSearchPortal/dataset"
+aekosSubmission:
+  url: "http://shared-uat.ecoinformatics.org.au:8080/shared-web/api/submission/create"
+aekosMintedDoi:
+  url: "http://shared-uat.aekos.org.au:8080/AEKOS.AekosSearchPortal/dataset"
 
-# acsaUrl: 'http://csna.gaiaresources.com.au/wordpress/'
+acsaUrl: 'http://csna.gaiaresources.com.au/wordpress/'
 
 bie:
-  baseURL: "https://species.bioatlas.se"
+  baseURL: "https://bie.ala.org.au"
 
 biocache:
-  baseURL: "https://records.bioatlas.se"
+  baseURL: "https://biocache.ala.org.au"
 
 biocollect:
   support:
     email:
-      address: "aleksandra.magdziarek@biol.lu.se"
+      address: "biocollect-support@ala.org.au"
 
 collectory:
   service:
-    url: "https://collections.bioatlas.se/ws"
+    url: "https://collections.ala.org.au"
 
 
 ecodata:
-  baseURL: "https://canmove-dev.ekol.lu.se:8080/"
-#  service:
-#    url: "${ecodata.baseURL}/ws"
+  baseURL: "https://ecodata.ala.org.au/"
 
 
 google:
   maps:
     base: "https://maps.googleapis.com/maps/api/js?key="
-    apiKey:  "AIzaSyA0HqqmZZT8n7bSeQ5rMZdhaCGTj4Kf_VA"
-    url: "${google.maps.base}${google.maps.apiKey ?: 'You.Need.To.Add.A.Config.Property.Named.google.maps.apiKey'}"
-
-#    geocode:
-#      url: "https://maps.googleapis.com/maps/api/geocode/json?"
-
 
 headerAndFooter:
-  # baseURL: "https://www.ala.org.au/commonui-bs2" #"https://www.ala.org.au/commonui-bs2-v2/commonui-bs2"
-  baseURL: "https://static.bioatlas.se/bs3"
+  baseURL: "https://www.ala.org.au/commonui-bs2" #"https://www.ala.org.au/commonui-bs2-v2/commonui-bs2"
+
 images:
-  baseURL: "https://images.bioatlas.se"
+  baseURL: "https://images.ala.org.au"
 
 lists:
-  baseURL: "https://lists.bioatlas.se" 
+  baseURL: "https://lists.ala.org.au" # "https://lists-test.ala.org.au/public/speciesLists"
   commonFields: ['rawScientificName', 'matchedName', 'commonName']
 
+merit:
+  baseURL: "https://fieldcapture-test.ala.org.au"
+
+mdba:
+  baseUrl: "http://mdba-test.ala.org.au"
+  searchUrl: "/occurrences/search?fq=data_hub_uid:dh10#tab_mapView"
+
+mobile:
+  auth:
+    check:
+      url:  "https://m.ala.org.au/mobileauth/mobileKey/checkKey"
+
+
 pdfgen:
   baseURL: "https://pdfgen.ala.org.au/"
 
-# sld:
-#   polgon:
-#     default:
-#       url: "http://fish.ala.org.au/data/alt-dist.sld"
-#     highlight:
-#       url: "http://fish.ala.org.au/data/fc-highlight.sld"
+sld:
+  polgon:
+    default:
+      url: "http://fish.ala.org.au/data/alt-dist.sld"
+    highlight:
+      url: "http://fish.ala.org.au/data/fc-highlight.sld"
 
 speciesConfiguration:
   default: [
@@ -165,17 +158,7 @@ speciesConfiguration:
 
 
 spatial:
-   baseURL: "https://spatial.bioatlas.se/"
-   layersUrl: "https://spatial.bioatlas.se/ws"
-   geoserverUrl: "https://spatial.bioatlas.se/geoserver"
-   wms:
-    # url: "${spatial.baseURL}/geoserver/ALA/wms?"
-    url: "https://spatial.bioatlas.se/geoserver/ALA/wms?"
-    cache:
-        url: "https://spatial.bioatlas.se/geoserver/gwc/service/wms?"
-
-
-
+   baseURL: "https://spatial.ala.org.au/"
 
 upload:
    images:
@@ -295,11 +278,6 @@ grails:
 
 
 
-#info:
-#    app:
-#        name: '@info.app.name@'
-#        version: '@info.app.version@'
-#        grailsVersion: '@info.app.grailsVersion@'
 spring:
     main:
         banner-mode: "off"
@@ -345,9 +323,3 @@ projectdata:
   industries:
     enabled: false
 
-
-userDetails: 
-  url: "https://auth.bioatlas.se/userdetails/"
-
-userDetailsById:
-  path: "getUserDetails"
\ No newline at end of file
diff --git a/grails-app/controllers/au/org/ala/biocollect/AclFilterInterceptor.groovy b/grails-app/controllers/au/org/ala/biocollect/AclFilterInterceptor.groovy
index c5ce65c2..75089070 100644
--- a/grails-app/controllers/au/org/ala/biocollect/AclFilterInterceptor.groovy
+++ b/grails-app/controllers/au/org/ala/biocollect/AclFilterInterceptor.groovy
@@ -31,7 +31,13 @@ class AclFilterInterceptor {
             return true
 
 
-        def method = controllerClass.getMethod(actionName?:"index", [] as Class[])
+        def method
+        def controllerActionName = actionName?:"index"
+        try {
+            method = controllerClass.getMethod(controllerActionName, [] as Class[])
+        } catch (NoSuchMethodException noMethod) {
+            log.error "No method, ${controllerActionName}, found for controller - ${controllerName}."
+        }
 
         def roles = roleService.getAugmentedRoles()
         def userId = userService.getCurrentUserId(request)
@@ -49,8 +55,8 @@ class AclFilterInterceptor {
             params.userIsAlaAdmin = false
         }
 
-        if (controllerClass.isAnnotationPresent(PreAuthorise) || method.isAnnotationPresent(PreAuthorise)) {
-            PreAuthorise pa = method.getAnnotation(PreAuthorise)?:controllerClass.getAnnotation(PreAuthorise)
+        if (controllerClass.isAnnotationPresent(PreAuthorise) || method?.isAnnotationPresent(PreAuthorise)) {
+            PreAuthorise pa = method?.getAnnotation(PreAuthorise)?:controllerClass.getAnnotation(PreAuthorise)
             if ((controllerClass != ProjectController) && (!pa.projectIdParam()?.equals('id'))) {
                 projectId = params[pa.projectIdParam()]
             }
diff --git a/grails-app/controllers/au/org/ala/biocollect/BioActivityController.groovy b/grails-app/controllers/au/org/ala/biocollect/BioActivityController.groovy
index 0ab9b556..4ce42d27 100644
--- a/grails-app/controllers/au/org/ala/biocollect/BioActivityController.groovy
+++ b/grails-app/controllers/au/org/ala/biocollect/BioActivityController.groovy
@@ -896,19 +896,16 @@ class BioActivityController {
                     result = data
                 }
 
-                // This is returned to the browswer as a text response due to workaround the warning
-                // displayed by IE8/9 when JSON is returned from an iframe submit.
-                response.setContentType('text/plain;charset=UTF8')
+                // iframe no longer supported
+                response.setContentType('application/json')
                 def resultJson = result as JSON
                 render resultJson.toString()
             }
         } else {
             response.status = SC_BAD_REQUEST
             result = [status: SC_BAD_REQUEST, error: 'No file attachment found']
-            // This is returned to the browswer as a text response due to workaround the warning
-            // displayed by IE8/9 when JSON is returned from an iframe submit.
-
-            response.setContentType('text/plain;charset=UTF8')
+            // iframe no longer supported
+            response.setContentType('application/json')
             def resultJson = result as JSON
             render resultJson.toString()
         }
diff --git a/grails-app/controllers/au/org/ala/biocollect/merit/ImageController.groovy b/grails-app/controllers/au/org/ala/biocollect/merit/ImageController.groovy
index 4787dcd8..72353d46 100644
--- a/grails-app/controllers/au/org/ala/biocollect/merit/ImageController.groovy
+++ b/grails-app/controllers/au/org/ala/biocollect/merit/ImageController.groovy
@@ -196,9 +196,11 @@ class ImageController {
         log.debug result.toString()
 
         if(!user){
+            response.addHeader('Content-Type','application/json')
             render ([error: 'Invalid user'] as JSON)
         } else {
-            response.addHeader('Content-Type','text/plain')
+            // iframe submit no longer supported.
+            response.addHeader('Content-Type','application/json')
             def json = result as JSON
             render json.toString()
         }
diff --git a/grails-app/controllers/au/org/ala/biocollect/merit/ProxyController.groovy b/grails-app/controllers/au/org/ala/biocollect/merit/ProxyController.groovy
index d4648000..b3655c96 100644
--- a/grails-app/controllers/au/org/ala/biocollect/merit/ProxyController.groovy
+++ b/grails-app/controllers/au/org/ala/biocollect/merit/ProxyController.groovy
@@ -79,10 +79,8 @@ class ProxyController {
                 def extension = FilenameUtils.getExtension(originalFilename)?.toLowerCase()
                 if (extension && !grailsApplication.config.upload.extensions.blacklist.contains(extension)){
                     def result =  webService.postMultipart(url, [document:params.document], f).content as JSON
-
-                    // This is returned to the browswer as a text response due to workaround the warning
-                    // displayed by IE8/9 when JSON is returned from an iframe submit.
-                    response.setContentType('text/plain;charset=UTF8')
+                    // iframe submit no longer supported.
+                    response.setContentType('application/json')
                     render result.toString();
                 } else {
                     response.setStatus(400)
@@ -90,7 +88,7 @@ class ProxyController {
                     def error = [error: "Files with the extension '.${extension}' are not permitted.",
                     statusCode: "400",
                     detail: "Files with the extension ${extension} are not permitted."] as JSON
-                    response.setContentType('text/plain;charset=UTF8')
+                    response.setContentType('application/json')
                     render error.toString()
                 }
             } else {
@@ -99,14 +97,13 @@ class ProxyController {
                 def error = [error: "Unable to retrieve the file name.",
                 statusCode: "400",
                 detail: "Unable to retrieve the file name."] as JSON
-                response.setContentType('text/plain;charset=UTF8')
+                response.setContentType('application/json')
                 render error.toString()
             }
         } else {
-            // This is returned to the browswer as a text response due to workaround the warning
-            // displayed by IE8/9 when JSON is returned from an iframe submit.
+            // iframe submit no longer supported.
             def result = webService.doPost(url, JSON.parse(params.document)) as JSON;
-            response.setContentType('text/plain;charset=UTF8')
+            response.setContentType('application/json')
 
             render result.toString()
         }
@@ -128,16 +125,18 @@ class ProxyController {
      * Returns an excel template that can be used to populate a table of data in an output form.
      */
     def excelOutputTemplate() {
+        String url =  "${grailsApplication.config.ecodata.service.url}/metadata/excelOutputTemplate"
+        String expandList = params.expandList?:""
 
-        String paramStr = ""
-        if (params.listName)
-            paramStr = "&listName=${params.listName?.encodeAsURL()}"
-        else if (params.expandList)
-            paramStr = "&expandList=" + params.expandList
-
-        String url =  "${grailsApplication.config.ecodata.service.url}/metadata/excelOutputTemplate?type=${params.type?.encodeAsURL()}" + paramStr
+        if (params.data) {
+            webService.proxyPostRequest(response, url,
+                    [listName:params.listName, type:params.type, data:params.data, editMode:params.editMode, allowExtraRows:params.allowExtraRows, autosizeColumns:false, expandList: expandList])
+        }
+        else {
+            url += "?type=${params.type?.encodeAsURL()}&listName=${params.listName?.encodeAsURL()}&listName=${expandList?.encodeAsURL()}"
+            webService.proxyGetRequest(response, url)
+        }
 
-        webService.proxyGetRequest(response, url)
         return null
     }
 
diff --git a/grails-app/controllers/au/org/ala/biocollect/merit/SiteController.groovy b/grails-app/controllers/au/org/ala/biocollect/merit/SiteController.groovy
index a72b8e04..8ddc5291 100644
--- a/grails-app/controllers/au/org/ala/biocollect/merit/SiteController.groovy
+++ b/grails-app/controllers/au/org/ala/biocollect/merit/SiteController.groovy
@@ -52,9 +52,6 @@ class SiteController {
     def create(){
         render view: 'edit', model: [create:true, documents:[]]
     }
-    def createSystematic(){
-        render view: 'createSystematic', model: [create:true, documents:[]]
-    }
 
 
     def createForProject(){
diff --git a/grails-app/controllers/au/org/ala/biocollect/merit/UserController.groovy b/grails-app/controllers/au/org/ala/biocollect/merit/UserController.groovy
index 5bc107a2..eb53f391 100644
--- a/grails-app/controllers/au/org/ala/biocollect/merit/UserController.groovy
+++ b/grails-app/controllers/au/org/ala/biocollect/merit/UserController.groovy
@@ -24,11 +24,6 @@ class UserController {
         }
     }
 
-    def create() {
-        // get user details from ecodata user collection to user/admin view
-
-    }
-
     private assembleUserData(user) {
         def recentEdits = userService.getRecentEditsForUserId(user.userId)
         def memberOrganisations = userService.getOrganisationsForUserId(user.userId)
diff --git a/grails-app/services/au/org/ala/biocollect/ProjectActivityService.groovy b/grails-app/services/au/org/ala/biocollect/ProjectActivityService.groovy
index 6a6e5563..05258194 100644
--- a/grails-app/services/au/org/ala/biocollect/ProjectActivityService.groovy
+++ b/grails-app/services/au/org/ala/biocollect/ProjectActivityService.groovy
@@ -9,6 +9,7 @@ import java.nio.file.Files
 import java.nio.file.StandardCopyOption
 //import org.springframework.util.FileCopyUtils
 class ProjectActivityService {
+    public static final SITE_CREATE = 'sitecreate', SITE_PICK = 'sitepick', SITE_PICK_CREATE = 'sitepickcreate'
 
     public static final SPECIAL_FACETS = [
             GeoMap: [
@@ -160,22 +161,18 @@ class ProjectActivityService {
             return "pActivityFormName is missing"
         }
 
-        if (props?.sites) {
-            if (!(props.sites instanceof List)) {
-                return "sites is not a list"
-            } else if (props.sites.size() == 0) {
-                return "no sites defined"
-            } else {
-                props.sites.each {
-                    def site = siteService.get(it)
-                    if (site?.error) {
-                        error = "\"${it}\" is not a valid siteId"
-                    }
+        if (published) {
+            if ([SITE_CREATE, SITE_PICK_CREATE].contains(props.surveySiteOption)) {
+                if (!isUserSiteCreationConfigValid(props)) {
+                    return "Location configuration is not valid. Either points, polygons or lines must be selected."
+                }
+            }
+
+            if ([SITE_PICK, SITE_PICK_CREATE].contains(props.surveySiteOption)) {
+                if (!isSiteSelectionConfigValid(props)) {
+                    return "Location configuration is not valid. Must select one or more sites."
                 }
             }
-        } else if (published) {
-            //error, no sites
-            return "sites are missing"
         }
 
         attributesAdded.each {
@@ -273,8 +270,10 @@ class ProjectActivityService {
     def searchSpecies(String id, String q, Integer limit, String output, String dataFieldName) {
         def pActivity = get(id)
         Map speciesConfig = getSpeciesConfigForProjectActivity(pActivity, output, dataFieldName)
-        def result = speciesService.searchSpeciesForConfig(speciesConfig, q, limit)
-        speciesService.formatSpeciesNameInAutocompleteList(speciesConfig.speciesDisplayFormat, result)
+        if (speciesConfig) {
+            def result = speciesService.searchSpeciesForConfig(speciesConfig, q, limit)
+            speciesService.formatSpeciesNameInAutocompleteList(speciesConfig.speciesDisplayFormat, result)
+        }
     }
 
     /**
@@ -487,4 +486,12 @@ class ProjectActivityService {
 
         entries
     }
+
+    Boolean isUserSiteCreationConfigValid (props) {
+        props?.allowPolygons || props?.allowPoints || props?.allowLine
+    }
+
+    Boolean isSiteSelectionConfigValid (props) {
+        props?.sites
+    }
 }
\ No newline at end of file
diff --git a/grails-app/services/au/org/ala/biocollect/merit/ActivityService.groovy b/grails-app/services/au/org/ala/biocollect/merit/ActivityService.groovy
index aff883bb..2cd92de9 100644
--- a/grails-app/services/au/org/ala/biocollect/merit/ActivityService.groovy
+++ b/grails-app/services/au/org/ala/biocollect/merit/ActivityService.groovy
@@ -234,8 +234,6 @@ class ActivityService {
      * @return
      */
     void lookupSpeciesInOutputData(String projectActivityId, String outputName, String listName, List outputData) {
-
-        Map singleSpecies = projectActivityService.getSingleSpecies(projectActivityId)
         def model = metadataService.annotatedOutputDataModel(outputName)
         if (listName) {
             model = model.find { it.name == listName }?.columns
@@ -243,6 +241,7 @@ class ActivityService {
 
         // Do species lookup
         def speciesField = model.find { it.dataType == 'species' }
+        Map singleSpecies = projectActivityService.getSingleSpecies(projectActivityId, outputName, speciesField.name)
         if (speciesField) {
             outputData.each { row ->
                 String name = row[speciesField.name]
@@ -250,7 +249,7 @@ class ActivityService {
                 if (singleSpecies.isSingle && (speciesField.validate == 'required' || row[speciesField.name])) {
                     row[speciesField.name] = [name: singleSpecies.name, listId: "not applicable", guid: singleSpecies.guid]
                 } else if (!singleSpecies.isSingle) {
-                    Map speciesSearchResults = projectActivityService.searchSpecies(projectActivityId, name, 10)
+                    Map speciesSearchResults = projectActivityService.searchSpecies(projectActivityId, name, 10, outputName, speciesField.name)
                     Map species = speciesService.findMatch(speciesSearchResults, name)
                     if (species) {
                         row[speciesField.name] = [name: species.name, listId: species.listId, guid: species.guid]
diff --git a/grails-app/services/au/org/ala/biocollect/merit/SettingService.groovy b/grails-app/services/au/org/ala/biocollect/merit/SettingService.groovy
index 57e4ebc4..a9605a19 100644
--- a/grails-app/services/au/org/ala/biocollect/merit/SettingService.groovy
+++ b/grails-app/services/au/org/ala/biocollect/merit/SettingService.groovy
@@ -45,18 +45,24 @@ class SettingService {
 
         if (!hub) {
             hub = grailsApplication.config.app.default.hub?:'default'
-            GrailsWebRequest.lookup()?.params.hub = hub
             String previousHub = cookieService.getCookie(LAST_ACCESSED_HUB)
             if (!previousHub) {
                 cookieService.setCookie(LAST_ACCESSED_HUB, hub, -1 /* -1 means the cookie expires when the browser is closed */)
             }
         }
         else {
+            // Hub value in multiple places like url path and in parameter causes Array to be passed instead of String.
+            // This causes setCookie method to throw exception since it expects String.
+            if (hub && ((hub instanceof List) || hub.getClass().isArray())) {
+                hub = hub[0]
+            }
+
             // Store the most recently accessed hub in a cookie so that 404 errors can be presented with the
             // correct skin.
             cookieService.setCookie(LAST_ACCESSED_HUB, hub, -1 /* -1 means the cookie expires when the browser is closed */)
         }
 
+        GrailsWebRequest.lookup().params.hub = hub
         def settings = getHubSettings(hub)
         if (!settings) {
             log.warn("no settings returned for hub ${hub}!")
diff --git a/grails-app/views/activity/bulkEdit.gsp b/grails-app/views/activity/bulkEdit.gsp
index 27858297..51ed11c0 100644
--- a/grails-app/views/activity/bulkEdit.gsp
+++ b/grails-app/views/activity/bulkEdit.gsp
@@ -11,12 +11,18 @@
     <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jstimezonedetect/1.0.4/jstz.min.js"></script>
     <asset:script type="text/javascript">
     var fcConfig = {
+        intersectService: "${createLink(controller: 'proxy', action: 'intersect')}",
+        featuresService: "${createLink(controller: 'proxy', action: 'features')}",
+        featureService: "${createLink(controller: 'proxy', action: 'feature')}",
+        spatialWms: "${grailsApplication.config.spatial.geoserverUrl}",
+        layersStyle: "${createLink(controller: 'regions', action: 'layersStyle')}",
         organisationViewUrl: "${createLink(controller: 'organisation', action: 'index', id: organisation.organisationId)}",
         serverUrl: "${grailsApplication.config.grails.serverURL}",
         projectViewUrl: "${createLink(controller: 'project', action: 'index')}/",
         saveUrl: "${createLink(controller: 'activity', action: 'ajaxUpdate')}",
         siteViewUrl: "${createLink(controller: 'site', action: 'index')}/",
         mapLayersConfig: ${mapService.getMapLayersConfig(project, null) as JSON},
+        excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
         returnTo: "${params.returnTo}"
         },
         here = document.location.href;
diff --git a/grails-app/views/activity/create.gsp b/grails-app/views/activity/create.gsp
index 78e761d1..e2c0dbe7 100644
--- a/grails-app/views/activity/create.gsp
+++ b/grails-app/views/activity/create.gsp
@@ -20,9 +20,15 @@
     <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jstimezonedetect/1.0.4/jstz.min.js"></script>
     <asset:script type="text/javascript">
     var fcConfig = {
+        intersectService: "${createLink(controller: 'proxy', action: 'intersect')}",
+        featuresService: "${createLink(controller: 'proxy', action: 'features')}",
+        featureService: "${createLink(controller: 'proxy', action: 'feature')}",
+        spatialWms: "${grailsApplication.config.spatial.geoserverUrl}",
+        layersStyle: "${createLink(controller: 'regions', action: 'layersStyle')}",
         serverUrl: "${grailsApplication.config.grails.serverURL}",
         createUrl: "${createLink(action: 'create')}/",
         mapLayersConfig: ${mapService.getMapLayersConfig(project, null) as JSON},
+        excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
         projectViewUrl: "${createLink(controller:'project', action:'index')}/"
         },
         here = document.location.href;
diff --git a/grails-app/views/activity/edit.gsp b/grails-app/views/activity/edit.gsp
index 815f5757..084d774c 100644
--- a/grails-app/views/activity/edit.gsp
+++ b/grails-app/views/activity/edit.gsp
@@ -21,10 +21,16 @@
     <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jstimezonedetect/1.0.4/jstz.min.js"></script>
     <asset:script type="text/javascript">
     var fcConfig = {
+        intersectService: "${createLink(controller: 'proxy', action: 'intersect')}",
+        featuresService: "${createLink(controller: 'proxy', action: 'features')}",
+        featureService: "${createLink(controller: 'proxy', action: 'feature')}",
+        spatialWms: "${grailsApplication.config.spatial.geoserverUrl}",
+        layersStyle: "${createLink(controller: 'regions', action: 'layersStyle')}",
         serverUrl: "${grailsApplication.config.grails.serverURL}",
         activityUpdateUrl: "${createLink(controller: 'activity', action: 'ajaxUpdate')}",
         activityDeleteUrl: "${createLink(controller: 'activity', action: 'ajaxDelete')}",
         projectViewUrl: "${createLink(controller: 'project', action: 'index')}/",
+        excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
         mapLayersConfig: ${mapService.getMapLayersConfig(project, null) as JSON},
         siteViewUrl: "${createLink(controller: 'site', action: 'index')}/"
         },
diff --git a/grails-app/views/activity/enterData.gsp b/grails-app/views/activity/enterData.gsp
index ef6dfdb9..8224fff1 100644
--- a/grails-app/views/activity/enterData.gsp
+++ b/grails-app/views/activity/enterData.gsp
@@ -19,6 +19,11 @@
     <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jstimezonedetect/1.0.4/jstz.min.js"></script>
     <asset:script type="text/javascript">
     var fcConfig = {
+        intersectService: "${createLink(controller: 'proxy', action: 'intersect')}",
+        featuresService: "${createLink(controller: 'proxy', action: 'features')}",
+        featureService: "${createLink(controller: 'proxy', action: 'feature')}",
+        spatialWms: "${grailsApplication.config.spatial.geoserverUrl}",
+        layersStyle: "${createLink(controller: 'regions', action: 'layersStyle')}",
         serverUrl: "${grailsApplication.config.grails.serverURL}",
         activityUpdateUrl: "${createLink(controller: 'activity', action: 'ajaxUpdate', id: activity.activityId)}",
         activityDeleteUrl: "${createLink(controller: 'activity', action: 'ajaxDelete', id: activity.activityId, params:[returnTo:grailsApplication.config.grails.serverURL + '/' + returnTo])}",
@@ -39,6 +44,7 @@
         uploadImagesUrl: "${createLink(controller: 'image', action: 'upload')}",
         sites: <fc:modelAsJavascript model="${project?.sites ?: []}"/>,
         mapLayersConfig: ${mapService.getMapLayersConfig(project, null) as JSON},
+        excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
         addCreatedSiteToListOfSelectedSites: ${canEditSites}
         },
         here = document.location.href;
diff --git a/grails-app/views/activity/index.gsp b/grails-app/views/activity/index.gsp
index d3dbf006..e98a5ddf 100644
--- a/grails-app/views/activity/index.gsp
+++ b/grails-app/views/activity/index.gsp
@@ -21,6 +21,11 @@
     <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jstimezonedetect/1.0.4/jstz.min.js"></script>
     <asset:script type="text/javascript">
     var fcConfig = {
+        intersectService: "${createLink(controller: 'proxy', action: 'intersect')}",
+        featuresService: "${createLink(controller: 'proxy', action: 'features')}",
+        featureService: "${createLink(controller: 'proxy', action: 'feature')}",
+        spatialWms: "${grailsApplication.config.spatial.geoserverUrl}",
+        layersStyle: "${createLink(controller: 'regions', action: 'layersStyle')}",
         serverUrl: "${grailsApplication.config.grails.serverURL}",
         activityUpdateUrl: "${createLink(controller: 'activity', action: 'ajaxUpdate')}",
         activityDeleteUrl: "${createLink(controller: 'activity', action: 'ajaxDelete')}",
@@ -42,6 +47,7 @@
         getGuidForOutputSpeciesUrl : "${createLink(controller: 'record', action: 'getGuidForOutputSpeciesIdentifier')}",
         project:${fc.modelAsJavascript(model:project)},
         mapLayersConfig: ${mapService.getMapLayersConfig(project, null) as JSON},
+        excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
         sites: ${fc.modelAsJavascript(model:project?.sites)}
         },
         here = document.location.href;
diff --git a/grails-app/views/activity/mobile.gsp b/grails-app/views/activity/mobile.gsp
index 7f72418d..ed38960d 100644
--- a/grails-app/views/activity/mobile.gsp
+++ b/grails-app/views/activity/mobile.gsp
@@ -8,9 +8,15 @@
     <asset:stylesheet src="forms-manifest.css"/>
     <asset:script type="text/javascript">
     var fcConfig = {
+        intersectService: "${createLink(controller: 'proxy', action: 'intersect')}",
+        featuresService: "${createLink(controller: 'proxy', action: 'features')}",
+        featureService: "${createLink(controller: 'proxy', action: 'feature')}",
+        spatialWms: "${grailsApplication.config.spatial.geoserverUrl}",
+        layersStyle: "${createLink(controller: 'regions', action: 'layersStyle')}",
         bieUrl: "${grailsApplication.config.bie.baseURL}",
         speciesProfileUrl: "${createLink(controller: 'proxy', action: 'speciesProfile', absolute:true)}",
         mapLayersConfig: ${mapService.getMapLayersConfig(project, null) as JSON},
+        excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
         googleStaticUrl:"http://maps.googleapis.com/maps/api/staticmap?maptype=terrian&zoom=12&sensor=false&size=350x250&markers=color:red%7C"
         },
         here = document.location.href;
diff --git a/grails-app/views/admin/_permissionTablePaginated.gsp b/grails-app/views/admin/_permissionTablePaginated.gsp
index bf57ae18..bf2c22b5 100644
--- a/grails-app/views/admin/_permissionTablePaginated.gsp
+++ b/grails-app/views/admin/_permissionTablePaginated.gsp
@@ -5,8 +5,6 @@
             <th>User Id</th>
             <th>User Name</th>
             <th>Role</th>
-            <th>Sites</th>
-            <th>Registered online</th>
             <th width="5%"></th>
             </thead>
             <tbody>
diff --git a/grails-app/views/admin/_searchUser.gsp b/grails-app/views/admin/_searchUser.gsp
deleted file mode 100644
index 1aec864f..00000000
--- a/grails-app/views/admin/_searchUser.gsp
+++ /dev/null
@@ -1,11 +0,0 @@
-<div class="row-fluid">
-    <div class="span12 margin-bottom-10">
-        <div class="site-input input-append pull-right">
-            <input class="search-sites-input" type="text" placeholder="Search for users here" />
-            <button title="Only show users with this name"
-                    class="btn btn-primary form-control"><i class="icon-search icon-white"></i> <g:message code="g.search"/></button>
-            <br>
-            <button type="button" class="btn btn-primary">Add a user<a href="http://localhost:8087/lu-butterflies/user/create">user</a></button>
-        </div>
-    </div>
-</div>
\ No newline at end of file
diff --git a/grails-app/views/bioActivity/create.gsp b/grails-app/views/bioActivity/create.gsp
index dd4542b7..0dc7b129 100644
--- a/grails-app/views/bioActivity/create.gsp
+++ b/grails-app/views/bioActivity/create.gsp
@@ -45,10 +45,11 @@
         speciesImageUrl:"${createLink(controller:'species', action:'speciesImage')}",
         bioActivityUpdate: "${createLink(controller: 'bioActivity', action: 'ajaxUpdate', params: [pActivityId: pActivity.projectActivityId])}",
         bioActivityView: "${createLink(controller: 'bioActivity', action: 'index')}/",
-        activityDataTableUploadUrl: "${createLink(controller:'bioActivity', action:'extractDataFromExcelTemplate', params:[pActivityId:pActivity.projectActivityId])}",
+        excelDataUploadUrl: "${createLink(controller:'bioActivity', action:'extractDataFromExcelTemplate', params:[pActivityId:pActivity.projectActivityId])}",
         getOutputSpeciesIdUrl : "${createLink(controller: 'output', action: 'getOutputSpeciesIdentifier')}",
         getGuidForOutputSpeciesUrl : "${createLink(controller: 'record', action: 'getGuidForOutputSpeciesIdentifier')}",
         mapLayersConfig: ${mapService.getMapLayersConfig(project, pActivity) as JSON},
+        excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
         uploadImagesUrl: "${createLink(controller: 'image', action: 'upload')}"
         },
         here = document.location.href;
diff --git a/grails-app/views/bioActivity/edit.gsp b/grails-app/views/bioActivity/edit.gsp
index 12bdb948..b7bd6bc6 100644
--- a/grails-app/views/bioActivity/edit.gsp
+++ b/grails-app/views/bioActivity/edit.gsp
@@ -47,13 +47,14 @@
         speciesSearchUrl: "${createLink(controller: 'search', action: 'searchSpecies', params: [id: pActivity.projectActivityId, limit: 10])}",
         bioActivityUpdate: "${createLink(controller: 'bioActivity', action: 'ajaxUpdate', params: [pActivityId: pActivity.projectActivityId, id: id])}",
         bioActivityMobileUpdate: "${createLink(controller: 'bioActivity', action: 'ajaxUpdate', params: [pActivityId: pActivity.projectActivityId, id: id, isMobile: true])}",
-        activityDataTableUploadUrl: "${createLink(controller:'bioActivity', action:'extractDataFromExcelTemplate', id:projectActivityId)}",
+        excelDataUploadUrl: "${createLink(controller:'bioActivity', action:'extractDataFromExcelTemplate', id:projectActivityId)}",
         getOutputSpeciesIdUrl : "${createLink(controller: 'output', action: 'getOutputSpeciesIdentifier')}",
         getGuidForOutputSpeciesUrl : "${createLink(controller: 'record', action: 'getGuidForOutputSpeciesIdentifier')}",
         bioActivityView: "${createLink(controller: 'bioActivity', action: 'index')}/",
         activityId: "${id}",
         returnTo: "${returnTo}",
         returnToMobile: "${createLink(controller: 'mobile', action: 'status')}#successfully-posted",
+        excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
         mapLayersConfig: ${mapService.getMapLayersConfig(project, pActivity) as JSON}
         },
         here = document.location.href;
diff --git a/grails-app/views/bioActivity/index.gsp b/grails-app/views/bioActivity/index.gsp
index 1a3ff0d2..bf159874 100644
--- a/grails-app/views/bioActivity/index.gsp
+++ b/grails-app/views/bioActivity/index.gsp
@@ -52,6 +52,7 @@
         noImageUrl: '${asset.assetPath(src: "no-image-2.png")}',
         speciesImageUrl:"${createLink(controller:'species', action:'speciesImage')}",
         mapLayersConfig: ${mapService.getMapLayersConfig(project, pActivity) as JSON},
+        excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
         ${(params?.version) ? ',version: ' + params?.version : ''}
         },
         here = document.location.href;
diff --git a/grails-app/views/bioActivity/list.gsp b/grails-app/views/bioActivity/list.gsp
index 6fe10f6c..09fc3c80 100644
--- a/grails-app/views/bioActivity/list.gsp
+++ b/grails-app/views/bioActivity/list.gsp
@@ -52,6 +52,7 @@
             occurrenceUrl: "${occurrenceUrl}",
             spatialUrl: "${spatialUrl}",
             mapLayersConfig: ${mapService.getMapLayersConfig(project, pActivity) as JSON},
+            excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
             absenceIconUrl:"${asset.assetPath(src: 'triangle.png')}"
         },
         here = document.location.href;
diff --git a/grails-app/views/bioActivity/previewActivity.gsp b/grails-app/views/bioActivity/previewActivity.gsp
index edc0f81b..d3b13375 100644
--- a/grails-app/views/bioActivity/previewActivity.gsp
+++ b/grails-app/views/bioActivity/previewActivity.gsp
@@ -3,14 +3,14 @@
 <!DOCTYPE html>
 <html xmlns="http://www.w3.org/1999/html">
 <head>
-    <meta name="layout" content="ajaxLayout"/>
+    <meta name="layout" content="${hubConfig.skin}"/>
 
     <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jstimezonedetect/1.0.4/jstz.min.js"></script>
     <asset:stylesheet src="common.css"/>
     <asset:stylesheet src="forms-manifest.css"/>
     <g:if test="${hubConfig.skin == "configurableHubTemplate1"}">
         <link rel="stylesheet" type="text/css"
-              href="${createLink(controller: 'hub', action: 'getStyleSheet')}?hub=${hubConfig.urlPath}&ver=${hubConfig.lastUpdated}">
+              href="${createLink(controller: 'hub', action: 'getStyleSheet')}?ver=${hubConfig.lastUpdated}">
     </g:if>
     <asset:script type="text/javascript">
     var fcConfig = {
@@ -32,11 +32,12 @@
         speciesSearch: "${createLink(controller: 'search', action: 'searchSpecies', params: [id: pActivity.projectActivityId, limit: 10])}",
         bioActivityUpdate: "${createLink(controller: 'bioActivity', action: 'ajaxUpdate', params: [pActivityId: pActivity.projectActivityId])}",
         bioActivityView: "${createLink(controller: 'bioActivity', action: 'index')}/",
-        activityDataTableUploadUrl: "${createLink(controller:'bioActivity', action:'extractDataFromExcelTemplate', params:[pActivityId:pActivity.projectActivityId])}",
+        excelDataUploadUrl: "${createLink(controller:'bioActivity', action:'extractDataFromExcelTemplate', params:[pActivityId:pActivity.projectActivityId])}",
         getOutputSpeciesIdUrl : "${createLink(controller: 'output', action: 'getOutputSpeciesIdentifier')}",
         getGuidForOutputSpeciesUrl : "${createLink(controller: 'record', action: 'getGuidForOutputSpeciesIdentifier')}",
         uploadImagesUrl: "${createLink(controller: 'image', action: 'upload')}",
         mapLayersConfig: ${mapService.getMapLayersConfig(project, pActivity) as JSON},
+        excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
         searchBieUrl: "${createLink(controller: 'search', action: 'searchSpecies', params: [id: pActivity.projectActivityId, limit: 10])}"
         }
     </asset:script>
diff --git a/grails-app/views/home/index.gsp b/grails-app/views/home/index.gsp
index 04488070..43348789 100644
--- a/grails-app/views/home/index.gsp
+++ b/grails-app/views/home/index.gsp
@@ -20,6 +20,7 @@
         sldPolgonDefaultUrl: "${grailsApplication.config.sld.polgon.default.url}",
         sldPolgonHighlightUrl: "${grailsApplication.config.sld.polgon.highlight.url}",
         dashboardUrl: "${g.createLink(controller: 'report', action: 'dashboardReport', params: params)}",
+        excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
         mapLayersConfig: ${mapService.getMapLayersConfig(project, pActivity) as JSON}
     }
     </asset:script>
diff --git a/grails-app/views/home/tabbed.gsp b/grails-app/views/home/tabbed.gsp
index d352cc41..98491351 100644
--- a/grails-app/views/home/tabbed.gsp
+++ b/grails-app/views/home/tabbed.gsp
@@ -12,6 +12,7 @@
         spatialWmsCacheUrl: "${grailsApplication.config.spatial.wms.cache.url}",
         spatialWmsUrl: "${grailsApplication.config.spatial.wms.url}",
         sldPolgonDefaultUrl: "${grailsApplication.config.sld.polgon.default.url}",
+        excelOutputTemplateUrl: "${createLink(controller: 'proxy', action:'excelOutputTemplate')}",
         sldPolgonHighlightUrl: "${grailsApplication.config.sld.polgon.highlight.url}"
     }
     </asset:script>
diff --git a/grails-app/views/layouts/configurableHubTemplate1.gsp b/grails-app/views/layouts/configurableHubTemplate1.gsp
index 0ad17a63..fe0c8b4b 100644
--- a/grails-app/views/layouts/configurableHubTemplate1.gsp
+++ b/grails-app/views/layouts/configurableHubTemplate1.gsp
@@ -85,7 +85,7 @@
     </asset:script>
     <g:layoutHead/>
     <link rel="stylesheet" type="text/css"
-          href="${createLink(controller: 'hub', action: 'getStyleSheet')}?hub=${hubConfig.urlPath}&ver=${hubConfig.lastUpdated}">
+          href="${createLink(controller: 'hub', action: 'getStyleSheet')}?ver=${hubConfig.lastUpdated}">
     <link href="${grailsApplication.config.skin.favicon}"  rel="icon"/>
 </head>
 
diff --git a/grails-app/views/layouts/lu.gsp b/grails-app/views/layouts/lu.gsp
deleted file mode 100644
index 622b47a6..00000000
--- a/grails-app/views/layouts/lu.gsp
+++ /dev/null
@@ -1,190 +0,0 @@
-<%@ page contentType="text/html;charset=UTF-8" %>
-<%@ page import="grails.util.Environment; au.org.ala.biocollect.merit.SettingPageType" %>
-<!DOCTYPE html>
-<html lang="en">
-<head>
-    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
-    <meta name="app.version" content="${g.meta(name: 'app.version')}"/>
-    <meta name="app.build" content="${g.meta(name: 'app.build')}"/>
-    <meta name="description" content="BioAtlas - BioCollect"/>
-    <meta name="author" content="Lund University">
-    <meta name="viewport" content="width=device-width, initial-scale=1.0">
-    <title><g:layoutTitle/></title>
-    <link href="${grailsApplication.config.skin.favicon}"  rel="icon"/>
-    <link rel="stylesheet" href="${grailsApplication.config.headerAndFooter.baseURL}/css/bootstrap.min.css"/>
-    <link rel="stylesheet" href="${grailsApplication.config.headerAndFooter.baseURL}/css/bootstrap-responsive.min.css"/>
-    <link rel="stylesheet" href="${grailsApplication.config.headerAndFooter.baseURL}/css/ala-styles.css"/>
-    <asset:stylesheet src="base.css"/>
-    <asset:stylesheet src="lu.css"/>
-    <asset:javascript src="base.js"/>
-    <g:layoutHead/>
-</head>
-
-<body class="${pageProperty(name: 'body.class') ?: 'nav-getinvolved'}" id="${pageProperty(name: 'body.id')}"
-      onload="${pageProperty(name: 'body.onload')}">
-<ala:systemMessage/>
-<g:set var="introText"><fc:getSettingContent settingType="${SettingPageType.INTRO}"/></g:set>
-<g:set var="userLoggedIn"><fc:userIsLoggedIn/></g:set>
-<div id="body-wrapper">
-    <g:if test="${fc.announcementContent()}">
-        <div id="announcement">
-            ${fc.announcementContent()}
-        </div>
-    </g:if>
-
-    <g:render template="/project/systematicMonitoringBanner" model="${[fc: fc, hf: hf]}"></g:render>
-    <g:if test="${isCitizenScience && !isUserPage}" model="${[hubConfig: hubConfig]}">
-        <g:render template="/shared/bannerCitizenScience"/>
-    </g:if>
-    <g:if test="${isEcoScience && !isUserPage}">
-        <g:render template="/shared/bannerEcoScience"/>
-    </g:if>
-
-    <g:set var="index" value="1"></g:set>
-    <g:set var="metaName" value="${'meta.breadcrumbParent' + index}"/>
-    <g:if test="${pageProperty(name: "meta.breadcrumb")}">
-        <section id="breadcrumb" class="${cssClassName}">
-            <div class="container-fluid">
-                <div class="row">
-                    <ul class="breadcrumb-list">
-                        <g:while test="${pageProperty(name: metaName)}">
-                            <g:set value="${pageProperty(name: metaName).tokenize(',')}" var="parentArray"/>
-                            <li><a href="${parentArray[0]}">${parentArray[1]}</a></li>
-                            <% index++ %>
-                            <g:set var="metaName" value="${'meta.breadcrumbParent' + index}"/>
-                        </g:while>
-                        <li class="active">${pageProperty(name: "meta.breadcrumb")}</li>
-                    </ul>
-                </div>
-            </div>
-        </section>
-    </g:if>
-
-    <div class="container-fluid" id="main-content">
-        <g:layoutBody/>
-    </div><!--/.container-->
-
-    <div class="container hidden-desktop">
-        <%-- Borrowed from http://marcusasplund.com/optout/ --%>
-        <a class="btn btn-small toggleResponsive"><i class="icon-resize-full"></i> <span>Desktop</span> version</a>
-    </div>
-
-    <%-- <div id="ala-footer">
-        <hf:footer/>
-    </div> --%>
-
-    <g:if test="${Environment.current == Environment.DEVELOPMENT}">
-        <div id="footer">
-            <div id="footer-wrapper">
-                <div class="container-fluid">
-                    <fc:footerContent/>
-                </div>
-
-                <div class="container-fluid">
-                    <div class="large-space-before">
-                        <button class="btn btn-mini" id="toggleFluid">toggle fixed/fluid width</button>
-                        <g:if test="${userLoggedIn && introText}">
-                            <button class="btn btn-mini" type="button" data-toggle="modal"
-                                    data-target="#introPopup">display user intro</button>
-                        </g:if>
-                    </div>
-                </div>
-            </div>
-        </div>
-    </g:if>
-</div><!-- /#body-wrapper -->
-<g:if test="${userLoggedIn && introText}">
-%{-- User Intro Popup --}%
-    <div id="introPopup" class="modal hide fade">
-        <div class="modal-header hide">
-            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
-
-            <h3>User Introduction</h3>
-        </div>
-
-        <div class="modal-body">
-            ${introText}
-        </div>
-
-        <div class="modal-footer">
-            <label for="hideIntro" class="pull-left">
-                <g:checkBox name="hideIntro" style="margin:0;"/>&nbsp;
-                Do not display this message again (current browser only)
-            </label>
-            <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
-        </div>
-    </div>
-</g:if>
-<asset:script type="text/javascript">
-    // Prevent console.log() killing IE
-    if (typeof console == "undefined") {
-        this.console = {log: function() {}};
-    }
-
-    $(document).ready(function (e) {
-
-        $.ajaxSetup({ cache: false });
-
-        $("#toggleFluid").click(function(el){
-            var fluidNo = $('div.container-fluid').length;
-            var fixNo = $('div.container').length;
-            //console.log("counts", fluidNo, fixNo);
-            if (fluidNo > fixNo) {
-                $('div.container-fluid').addClass('container').removeClass('container-fluid');
-            } else {
-                $('div.container').addClass('container-fluid').removeClass('container');
-            }
-        });
-
-        // Set up a timer that will periodically poll the server to keep the session alive
-        var intervalSeconds = 5 * 60;
-
-        setInterval(function() {
-            $.ajax("${createLink(controller: 'ajax', action: 'keepSessionAlive')}").done(function(data) {});
-        }, intervalSeconds * 1000);
-
-        //make sure external link icon is not added to links in footer.
-        $('#ala-footer').find('a').addClass('do-not-mark-external')
-
-    }); // end document ready
-
-</asset:script>
-<g:if test="${userLoggedIn}">
-    <asset:script type="text/javascript">
-        $(document).ready(function (e) {
-            // Show introduction popup (with cookie check)
-            var cookieName = "hide-intro";
-            var introCookie = $.cookie(cookieName);
-            //  document.referrer is empty following login from AUTH
-            if (!introCookie && !document.referrer) {
-                $('#introPopup').modal('show');
-            } else {
-                $('#hideIntro').prop('checked', true);
-            }
-            // console.log("referrer", document.referrer);
-            // don't show popup if user has clicked checkbox on popup
-            $('#hideIntro').click(function () {
-                if ($(this).is(':checked')) {
-                    $.cookie(cookieName, 1);
-                } else {
-                    $.removeCookie(cookieName);
-                }
-            });
-        }); // end document ready
-    </asset:script>
-</g:if>
-<!-- JS resources-->
-<asset:deferredScripts />
-
-<g:if test="${grailsApplication.config.bugherd.integration}">
-    <script type="text/javascript">
-        (function (d, t) {
-            var bh = d.createElement(t), s = d.getElementsByTagName(t)[0];
-            bh.type = 'text/javascript';
-            bh.src = '//www.bugherd.com/sidebarv2.js?apikey=2wgeczqfyixard6e9xxfnq';
-            s.parentNode.insertBefore(bh, s);
-        })(document, 'script');
-    </script>
-</g:if>
-</body>
-</html>
\ No newline at end of file
diff --git a/grails-app/views/project/_CSAdmin.gsp b/grails-app/views/project/_CSAdmin.gsp
index 1a5f8ecb..c477c725 100644
--- a/grails-app/views/project/_CSAdmin.gsp
+++ b/grails-app/views/project/_CSAdmin.gsp
@@ -69,11 +69,6 @@
 
                 <div id="permissions" class="pill-pane">
                     <h3>Members</h3>
-                    <%-- TODO - Here there should be a container with pills: LIST where 
-                    a new member is added, DETAILS where contact details are added --%>
-                    <g:if test="${hubConfig?.systematic}">
-                        <g:render template="/admin/searchUser" />
-                    </g:if>
                     <g:render template="/admin/addPermissions" model="[addUserUrl:g.createLink(controller:'user', action:'addUserAsRoleToProject'), entityId:project.projectId]"/>
                     <g:render template="/admin/permissionTablePaginated"/>
                 </div>
diff --git a/grails-app/views/project/_systematicMonitoringBanner.gsp b/grails-app/views/project/_systematicMonitoringBanner.gsp
deleted file mode 100644
index d8d55879..00000000
--- a/grails-app/views/project/_systematicMonitoringBanner.gsp
+++ /dev/null
@@ -1,86 +0,0 @@
-<g:set var="settingService" bean="settingService"></g:set>
-<nav role='navigation' id="biocollectNav"
-    class="${hubConfig.defaultFacetQuery.contains('isEcoScience:true') ? 'ecoScienceNav' : ''}"
->
-    <ul id='main'>
-        <g:set var="path" value="${request.getServletPath()}"/>
-        <li class="pull-left">
-            <a id="biocollectlogo" class="white-background" href="${grailsApplication.config.biocollect.homepageUrl}"><img src="${asset.assetPath(src:"icons/BioCollect24.jpg")}" width="193"></a>
-        </li>
-        <%-- <li class="${(path ==~ /.*project\/projectFinder.*/) ? 'active' : ''}">
-            <a href="${createLink(controller: 'home', action: 'index')}" class="btnSearch"><span class="fa fa-search"></span>Search</a>
-        </li> --%>
-        <li class="${(path ==~ /.*bioActivity\/allRecords.*/) ? 'active' : ''}">
-                <a href="${createLink(controller: 'bioActivity', action: 'allRecords')}" class="btnAllData"><span class="fa fa-database"></span>All Records</a>
-        </li>
-        <li class="${(path ==~ /.*site\/.*/) ? 'active' : ''}">
-            <a href="${createLink(controller: 'site', action: 'list')}" class="btnSite"><span class="fa fa-map-marker"></span>Sites</a>
-        </li>
-        <%-- <li class="${(path ==~ /.*project\/create.*/) ? 'active' : ''}">
-            <a href="<fc:getNewProjectLinkForHub hubConfig="${hubConfig}"/>" class="btnNewProject"><span class="fa fa-plus"></span>New Project</a>
-        </li> --%>
-        <g:if test="${fc.userIsSiteAdmin()}">
-            <li class="${(path ==~ /.*admin\/index.*/) ? 'active' : ''}">
-                <a href="${createLink(controller: 'admin')}" class="btnAdministration"><span class="fa fa-lock"></span>Admin</a>
-            </li>
-        </g:if>
-        <g:if test="${fc.currentUserDisplayName()}">
-            <li class="${(path ==~ /.*user\/index.*/) || (path ==~ /.*bioActivity\/list.*/) || (path ==~ /.*project\/myProjects.*/) ? 'active' : ''} dropdown-submenu pull-left" role="menu">
-                <a href="#" ><span class="fa fa-user"></span><fc:currentUserDisplayName/></a>
-                <ul>
-                    <!--
-                    <li><a href="${createLink(controller: 'user', action: 'index')}" class="btnMyDashboard"><span class="fa fa-dashboard"></span>My Dashboard</a></li>
-                    -->
-                    <g:if test="${!settingService.isWorksHub()}">
-                        <li><a href="${createLink(controller: 'bioActivity', action: 'list')}" class="btnMyData"><span class="fa fa-database"></span>My Data</a></li>
-                    </g:if>
-                    <li><a href="${createLink(controller: 'project', action: 'myProjects')}" class="btnMyProjects"><span class="fa fa-folder"></span>My Projects</a></li>
-                    <li><a href="${createLink(controller: 'organisation', action: 'myOrganisations')}" class="btnMyOrganisation"><span class="fa fa-building"></span>My Organisation</a></li>
-                    <li><a href="${createLink(controller: 'site', action: 'myFavourites')}" class="btnMyFavouriteSites"><span class="fa fa-map-marker"></span>My Sites</a></li>
-                </ul>
-            </li>
-        </g:if>
-        <li><fc:loginLogoutButton logoutUrl="${grailsApplication.config.grails.serverURL}/logout/logout"
-                                  iconLogin="fa fa-sign-in" iconLogout="fa fa-sign-out" cssClass="nothing"/></li>
-        <li class="more" data-width="80" style="display: none">
-            <a href="#"><span class="fa fa-ellipsis-h"></span>More</a>
-            <ul class="more-ul"></ul>
-        </li>
-        <li class="pull-right"><a href="http://bioatlas.se" class="ala-link do-not-mark-external"><span
-                class="ala-icon">&nbsp;</span>${grailsApplication.config.organization.name}</a></li>
-    </ul>
-</nav>
-<asset:script>
-    function calcWidth() {
-        var navwidth = 0;
-        var morewidth = $('#main .more').outerWidth(true);
-        $('#main > li:not(.more)').each(function() {
-            navwidth += $(this).outerWidth( true );
-        });
-        var availablespace = $('nav').outerWidth(true) - morewidth;
-
-        if (navwidth > availablespace) {
-            var lastItem = $('#main > li:not(.more)').last();
-            lastItem.attr('data-width', lastItem.outerWidth(true));
-            lastItem.prependTo($('#main .more ul.more-ul'));
-            calcWidth();
-        } else {
-            var firstMoreElement = $('#main li.more li').first();
-            while ((navwidth = navwidth + firstMoreElement.data('width')) < availablespace) {
-                firstMoreElement.insertBefore($('#main .more'));
-                firstMoreElement = $('#main li.more li').first();
-            }
-        }
-
-        if ($('.more li').length > 0) {
-            $('.more').css('display','inline-block');
-        } else {
-            $('.more').css('display','none');
-        }
-    }
-    $(window).on('resize',function(){
-        calcWidth();
-    });
-    $('#biocollectNav').show();
-    calcWidth();
-</asset:script>
\ No newline at end of file
diff --git a/grails-app/views/site/_searchSite.gsp b/grails-app/views/site/_searchSite.gsp
index 1df7eccd..69934a7d 100644
--- a/grails-app/views/site/_searchSite.gsp
+++ b/grails-app/views/site/_searchSite.gsp
@@ -4,7 +4,7 @@
             <input class="search-sites-input" type="text" placeholder="Search for sites here"
                    data-bind="value: searchTerm" />
             <button title="Only show projects which contain the search term"
-                    class="btn btn-primary form-control"><i class="icon-search icon-white"></i> <g:message code="g.search"/></button>
+                    class="btn btn-primary form-control"><i class="icon-search icon-white"></i> Search</button>
         </div>
     </div>
 </div>
\ No newline at end of file
diff --git a/grails-app/views/site/_siteDetails.gsp b/grails-app/views/site/_siteDetails.gsp
index 2e31a5d7..eb30e9b3 100644
--- a/grails-app/views/site/_siteDetails.gsp
+++ b/grails-app/views/site/_siteDetails.gsp
@@ -1,7 +1,7 @@
 <!-- ko stopBinding: true -->
 <div class="well" id="sitemap">
     <div class="row-fluid">
-        <h2><g:message code="site.details.title"/></h2>
+        <h2>Site create/edit</h2>
 
         <p class="media-heading">
             <g:message code="site.details.help"/>
@@ -87,9 +87,7 @@
 
     <h2><g:message code="site.details.extent.heading"/></h2>
     <fc:iconHelp title="Extent of the site"><g:message code="site.details.extent.help"/></fc:iconHelp>
-<%-- TODO if systematic monitoring then --%>
-    <%-- <g:render template="/site/siteDefinition" model="${[showLine: true, showMyLocation: true, showAllowSearchLocationByAddress: false, showAllowSearchRegionByAddress: true, showMarker: true]}"/> --%>
-    <g:render template="/site/systematicSiteDefinition" model="${[showLine: true, showMyLocation: true, showAllowSearchLocationByAddress: false, showAllowSearchRegionByAddress: true, showMarker: true]}"/>
 
+    <g:render template="/site/siteDefinition" model="${[showLine: true, showMyLocation: true, showAllowSearchLocationByAddress: false, showAllowSearchRegionByAddress: true, showMarker: true]}"/>
 </div>
 <!-- /ko -->
diff --git a/grails-app/views/site/_systematicSiteDefinition.gsp b/grails-app/views/site/_systematicSiteDefinition.gsp
deleted file mode 100644
index fa29f683..00000000
--- a/grails-app/views/site/_systematicSiteDefinition.gsp
+++ /dev/null
@@ -1,229 +0,0 @@
-<div id="sitedef" class="row-fluid">
-    <div class="span7">
-        <m:map id="mapForSystematic" width="100%"/>
-    </div>
-
-    <div class="span5">
-        <div data-bind="visible: showPointAttributes(), template: { name: 'point'}"></div>
-
-        <div class="well well-small" data-bind="visible: site().extent().geometry().type">
-            <div data-bind="if: transients.loadingGazette()"><span class="fa fa-spin fa-spinner"></span></div>
-
-            <!-- ko if:site().extent().geometry().type() == 'pid' -->
-            <div class="row-fluid controls-row">
-                <span class="label label-success"><g:message code="site.metadata.name"/> </span> <span
-                    data-bind="text: site().extent().geometry().name"></span>
-            </div>
-
-            <div class="row-fluid controls-row">
-                <span class="label label-success"><g:message code="site.metadata.layer"/></span> <span
-                    data-bind="text: site().extent().geometry().layerName"></span>
-            </div>
-
-            <div class="row-fluid controls-row">
-                <span class="label label-success"><g:message code="site.metadata.area"/></span> <span
-                    data-bind="html: displayAreaInReadableFormat"></span>
-            </div>
-            <!-- /ko -->
-
-            <!-- ko if:site().extent().geometry().type() != 'pid' --> 
-            <div class="row-fluid controls-row" data-bind="visible: site().extent().geometry().areaKmSq">
-                <span class="label label-success"><g:message code="site.metadata.area"/></span> <span
-                    data-bind="html: displayAreaInReadableFormat"></span>
-            </div>
-
-            <%-- <div class="row-fluid controls-row gazProperties" data-bind="visible: site().extent().geometry().state">
-                <span class="label label-success"><g:message code="site.metadata.state"/></span> <span
-                    data-bind="expandable: site().extent().geometry().state"></span>
-            </div> --%>
-
-            <div class="row-fluid controls-row gazProperties" data-bind="visible: site().extent().geometry().nrm">
-                <span class="label label-success"><g:message code="site.metadata.nrm"/></span> <span
-                    data-bind="expandable: site().extent().geometry().nrm"></span>
-            </div>
-
-            <div class="row-fluid controls-row" data-bind="visible: site().extent().geometry().centre">
-                <span class="label label-success"><g:message code="site.metadata.centre"/></span> <span
-                    data-bind="text: site().extent().geometry().centre"></span>
-            </div>
-
-            <div class="row-fluid controls-row circleProperties propertyGroup"
-                 data-bind="visible: site().extent().geometry().radius">
-                <span class="label label-success"><g:message code="site.metadata.radius"/></span> <span
-                    data-bind="text: site().extent().geometry().radius"></span>
-            </div>
-            <!-- /ko -->
-        </div>
-
-        <div class="well well-small" data-bind="visible: allowPointsOfInterest()">
-            <h4><g:message code="site.poi.title"/>
-            <fc:iconHelp title="${message(code: 'site.poi.title')}"><g:message code="site.poi.help"/></fc:iconHelp>
-            </h4>
-
-            <div class="row-fluid" id="pointsOfInterest">
-                <div class="span12" data-bind="foreach: pointsOfInterest">
-                    <div>
-                        <div data-bind="template: { name: 'poi'}"></div>
-                        <button type="button" class="btn btn-danger" style="margin-bottom:20px;"
-                                data-bind="click: $parent.removePointOfInterest, visible:!hasPhotoPointDocuments">Remove</button>
-                    </div>
-                    <hr/>
-                </div>
-            </div>
-
-            <div class="row-fluid">
-                <button type="button" data-bind="click: newPointOfInterest"
-                        class="btn">Add <span
-                        data-bind="visible: pointsOfInterest.length > 0">another&nbsp;</span>POI
-                </button>
-            </div>
-        </div>
-    </div>
-</div>
-
-<!-- Template containing additional attributes for a Point shape type -->
-<script type="text/html" id="point">
-<div class="well well-small">
-    <div class="drawLocationDiv row-fluid">
-        <div class="span12">
-            <div class="row-fluid controls-row">
-                <fc:textField data-bind="value: site().extent().geometry().decimalLatitude"
-                              data-validation-engine="validate[required,custom[number],min[-90],max[90]]"
-                              outerClass="span6" label="${message(code:'site.point.lat')}"/>
-                <fc:textField data-bind="value: site().extent().geometry().decimalLongitude"
-                              data-validation-engine="validate[required,custom[number],min[-180],max[180]]"
-                              data-prompt-position="topRight:-150" outerClass="span6" label="${message(code:'site.point.lng')}"/>
-            </div>
-
-            <div class="row-fluid controls-row">
-                <fc:textField data-bind="value: site().extent().geometry().uncertainty" outerClass="span4"
-                              data-validation-engine="validate[min[0],custom[integer]]"
-                              label="${message(code:'site.point.uncertainty')}"/>
-                <fc:textField data-bind="value: site().extent().geometry().precision" outerClass="span4"
-                              data-validation-engine="validate[min[0],custom[number]]"
-                              label="${message(code:'site.point.precision')}"/>
-                %{-- CG - only supporting WGS84 at the moment --}%
-                <fc:textField data-bind="value: site().extent().geometry().datum" outerClass="span4" label="${message(code:'site.point.datum')}"
-                              placeholder="WGS84" readonly="readonly"/>
-            </div>
-
-            <div class="row-fluid  controls-row">
-                <button type="button" data-bind="click: refreshCoordinates"
-                        class="btn">Refresh Coordinates
-                </button>
-            </div>
-        </div>
-    </div>
-</div>
-</script>
-
-<!-- Template containing Point of Interest form fields -->
-<script type="text/html" id="poi">
-<div class="drawLocationDiv row-fluid">
-    <div class="span12">
-        <div class="row-fluid alert" style="box-sizing:border-box;" data-bind="visible:hasPhotoPointDocuments">
-            <g:message code="site.poi.tip"/>
-        </div>
-
-        <div class="row-fluid controls-row">
-            <fc:textField data-bind="value:name" outerClass="span6" label="${message(code:'site.poi.name')}"
-                          data-validation-engine="validate[required]"/>
-            <div class="span6">
-                <label for="type"><g:message code="site.poi.type"/></label>
-                <g:select data-bind="value: type"
-                          name='type'
-                          from="['choose type', 'photopoint', 'location of previous surveys', 'other']"
-                          keys="['none', 'photopoint', 'survey', 'other']"/>
-            </div>
-        </div>
-
-        <div class="row-fluid controls-row">
-            <fc:textArea rows="2" data-bind="value:description" outerClass="span12" class="span12"
-                         label="${message(code:'site.poi.description')}"/>
-        </div>
-
-        <div class="row-fluid controls-row">
-            <fc:textField data-bind="value:geometry().decimalLatitude" outerClass="span4" label="${message(code:'site.poi.lat')}"
-                          data-validation-engine="validate[required,custom[number],min[-90],max[90]]"
-                          data-prompt-position="topRight:-150"/>
-            <fc:textField data-bind="value:geometry().decimalLongitude" outerClass="span4" label="${message(code:'site.poi.lng')}"
-                          data-validation-engine="validate[required,custom[number],min[-180],max[180]]"/>
-            <fc:textField data-bind="value:geometry().bearing" outerClass="span4" label="${message(code:'site.poi.bearing')}"
-                          data-validation-engine="validate[custom[number],min[0],max[360]]"
-                          data-prompt-position="topRight:-150"/>
-        </div>
-
-        <div class="row-fluid controls-row" style="display:none;">
-            <fc:textField data-bind="value:geometry().uncertainty, enable: hasCoordinate()" outerClass="span4"
-                          label="${message(code:'site.poi.uncertainty')}"/>
-            <fc:textField data-bind="value:geometry().precision, enable: hasCoordinate()" outerClass="span4"
-                          label="${message(code:'site.poi.precision')}"/>
-            <fc:textField data-bind="value:geometry().datum, enable: hasCoordinate()" outerClass="span4"
-                          label="${message(code:'site.poi.datum')}"
-                          placeholder="e.g. WGS84"/>
-        </div>
-    </div>
-</div>
-</script>
-
-
-<asset:script type="text/javascript">
-function initSiteViewModel(allowPointsOfInterest, edit) {
-    // server side generated paths & properties
-    var SERVER_CONF = {
-        siteData: ${site ?: [] as grails.converters.JSON},
-        spatialService: '${createLink(controller: 'proxy', action: 'feature')}',
-        regionListUrl: "${createLink(controller: 'regions', action: 'regionsList')}",
-        featuresService: "${createLink(controller: 'proxy', action: 'features')}",
-        featureService: "${createLink(controller: 'proxy', action: 'feature')}",
-        spatialWms: '${grailsApplication.config.spatial.geoserverUrl}',
-        allowPointsOfInterest: allowPointsOfInterest,
-        readonly: edit? true : false,
-        useMyLocation: ${showMyLocation ?: false},
-        allowSearchLocationByAddress: ${showAllowSearchLocationByAddress ?: false},
-        allowSearchRegionByAddress: ${showAllowSearchRegionByAddress ?: true},
-        drawOptions: {
-            polyline: ${showLine ?: true},
-            marker:  ${showMarker ?: true}
-        }
-    };
-
-    var savedSiteData = {
-        siteId: "${site?.siteId}",
-        name : "${site?.name?.encodeAsJavaScript()}",
-        externalId : "${site?.externalId}",
-        catchment: "${site?.catchment}",
-        context : "${site?.context}",
-        type : "${site?.type}",
-        extent: ${site?.extent ?: 'null'},
-        poi: ${site?.poi ?: '[]'},
-        area : "${site?.area}",
-        description : "${site?.description?.encodeAsJavaScript()}",
-        notes : "${site?.notes?.encodeAsJavaScript()}",
-        documents : JSON.parse('${(siteDocuments ?: documents).encodeAsJavaScript() ?: '{}'}'),
-    <g:if test="${project}">
-        projects : ['${project.projectId}'],
-    </g:if>
-    <g:else>
-        projects : ${site?.projects ?: '[]'}
-    </g:else>
-    };
-
-    var siteViewModel = new SystematicSiteViewModel("mapForSystematic", savedSiteData, SERVER_CONF)
-    var map = siteViewModel.map;
-
-    <g:if  test="${project?.projectSite?.extent?.geometry}">
-        var source = "${project.projectSite.extent.source}"
-        var projectArea = <fc:modelAsJavascript model="${project.projectSite.extent.geometry}"/>;
-        var geometry = Biocollect.MapUtilities.featureToValidGeoJson(projectArea);
-        if(source != 'none'){
-            map.setGeoJSON(geometry);
-        }
-    </g:if>
-
-
-    ko.applyBindings(siteViewModel, document.getElementById("sitemap"));
-
-    return siteViewModel;
-}
-</asset:script>
diff --git a/grails-app/views/site/createSystematic.gsp b/grails-app/views/site/createSystematic.gsp
deleted file mode 100644
index c72195a4..00000000
--- a/grails-app/views/site/createSystematic.gsp
+++ /dev/null
@@ -1,182 +0,0 @@
-<%@ page import="grails.converters.JSON; org.grails.web.json.JSONArray" contentType="text/html;charset=UTF-8" %>
-<g:set var="mapService" bean="mapService"></g:set>
-<!DOCTYPE html>
-<html>
-<head>
-  <meta name="layout" content="${hubConfig.skin}"/>
-  <title> ${create ? 'New' : ('Edit | ' + site?.name?.encodeAsHTML())} | Sites </title>
-    <meta name="breadcrumbParent1" content="${createLink(controller: 'project', action: 'homePage')},Home"/>
-    <meta name="breadcrumbParent2"
-          content="${createLink(controller: 'site', action: 'list')},Sites"/>
-    <g:if test="${project}">
-        <meta name="breadcrumb" content="Create new site for ${project?.name?.encodeAsHTML()}"/>
-    </g:if>
-    <g:elseif test="${create}">
-        <meta name="breadcrumb" content="Create"/>
-    </g:elseif>
-    <g:else>
-        <meta name="breadcrumbParent3"
-              content="${createLink(controller: 'site', action: 'index')}/${site?.siteId},${site?.name?.encodeAsHTML()}"/>
-        <meta name="breadcrumb" content="Edit"/>
-    </g:else>
-
-    <style type="text/css">
-    legend {
-        border: none;
-        margin-bottom: 5px;
-    }
-    h1 input[type="text"] {
-        color: #333a3f;
-        font-size: 28px;
-        /*line-height: 40px;*/
-        font-weight: bold;
-        font-family: Arial, Helvetica, sans-serif;
-        height: 42px;
-    }
-    .no-border { border-top: none !important; }
-  </style>
-    <link rel="stylesheet" src="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400italic,600,700"/>
-    <link rel="stylesheet" src="https://fonts.googleapis.com/css?family=Oswald:300"/>
-    <asset:script type="text/javascript">
-    var fcConfig = {
-        intersectService: "${createLink(controller: 'proxy', action: 'intersect')}",
-        featuresService: "${createLink(controller: 'proxy', action: 'features')}",
-        featureService: "${createLink(controller: 'proxy', action: 'feature')}",
-        spatialWms: "${grailsApplication.config.spatial.geoserverUrl}",
-        layersStyle: "${createLink(controller: 'regions', action: 'layersStyle')}",
-        spatialService: '${createLink(controller:'proxy',action:'feature')}',
-        intersectService: "${createLink(controller: 'proxy', action: 'intersect')}",
-        featuresService: "${createLink(controller: 'proxy', action: 'features')}",
-        featureService: "${createLink(controller: 'proxy', action: 'feature')}",
-        spatialWms: "${grailsApplication.config.spatial.geoserverUrl}",
-        geocodeUrl: "${grailsApplication.config.google.geocode.url}",
-        siteMetaDataUrl: "${createLink(controller:'site', action:'locationMetadataForPoint')}",
-        <g:if test="${project}">
-            pageUrl : "${ grailsApplication.config.security.cas.appServerName}${createLink(controller:'site', action:'createForProject', params:[projectId:project.projectId,checkForState:true])}",
-            projectUrl : "${ grailsApplication.config.security.cas.appServerName}${createLink(controller:'project', action:'index', id:project.projectId)}",
-        </g:if>
-        <g:elseif test="${site}">
-            pageUrl : "${ grailsApplication.config.security.cas.appServerName}${createLink(controller:'site', action:'edit', id: site?.siteId, params:[checkForState:true])}",
-        </g:elseif>
-        <g:else>
-            pageUrl : "${ grailsApplication.config.security.cas.appServerName}${createLink(controller:'site', action:'create', params:[checkForState:true])}",
-        </g:else>
-        sitePageUrl : "${createLink(action: 'index', id: site?.siteId)}",
-        homePageUrl : "${createLink(controller: 'home', action: 'index')}",
-        ajaxUpdateUrl: "${createLink(action: 'ajaxUpdate', id: site?.siteId)}",
-        mapLayersConfig: ${mapService.getMapLayersConfig(project, pActivity) as JSON},
-        returnTo: "${createLink(controller: 'project', action: 'index', id: project?.projectId)}"
-        },
-        here = window.location.href;
-
-    </asset:script>
-    <asset:stylesheet src="sites-manifest.css"/>
-    <asset:stylesheet src="leaflet-manifest.css"/>
-    <asset:javascript src="common.js"/>
-    <asset:javascript src="leaflet-manifest.js"/>
-    <asset:javascript src="sites-manifest.js"/>
-    <script src="${grailsApplication.config.google.maps.url}" async defer></script>
-</head>
-<body>
-    <div class="container-fluid validationEngineContainer" id="validation-container">
-        <bs:form action="update" inline="true">
-            <g:render template="siteDetails" model="${[showLine: true]}"/>
-            <div class="row-fluid">
-                <div class="form-actions span12">
-                    <button type="button" id="save" class="btn btn-primary">Save changes</button>
-                    <button type="button" id="cancel" class="btn">Cancel</button>
-                </div>
-            </div>
-        </bs:form>
-    </div>
-    <g:if env="development">
-    <div class="container-fluid">
-        <div class="expandable-debug">
-            <hr />
-            <h3>Debug</h3>
-            <div>
-                <h4>KO model</h4>
-                <pre data-bind="text:ko.toJSON($root,null,2)"></pre>
-                <h4>Activities</h4>
-                <pre>${site?.activities?.encodeAsHTML()}</pre>
-                <h4>Site</h4>
-                <pre>${site?.encodeAsHTML()}</pre>
-                <h4>Projects</h4>
-                <pre>${projects?.encodeAsHTML()}</pre>
-                <h4>Features</h4>
-                <pre>${mapFeatures}</pre>
-            </div>
-        </div>
-    </div>
-    </g:if>
-
-<asset:script type="text/javascript">
-    $(function(){
-
-        $('#validation-container').validationEngine('attach', {scroll: false});
-
-        $('.helphover').popover({animation: true, trigger:'hover'});
-
-        var siteViewModel = initSiteViewModel(true, ${!userCanEdit});
-        $('#cancel').click(function () {
-            if(siteViewModel.saved()){
-                document.location.href = fcConfig.sitePageUrl;
-            } if(fcConfig.projectUrl){
-                document.location.href = fcConfig.projectUrl;
-            }else {
-                document.location.href = fcConfig.homePageUrl;
-            }
-        });
-
-        $('#save').click(function () {
-            if ($('#validation-container').validationEngine('validate')) {
-                var json = siteViewModel.toJS();
-                //validate  if extent.geometry.pid, then update extent.source to pid, extent.geometry.type to pid
-                if (json.extent.geometry.pid){
-                    json.extent.source = 'pid';
-                    json.extent.geometry.type = 'pid'
-                }
-                var data = {
-                    site: json
-                    <g:if test="${project?.projectId}">
-                        ,
-                        projectId: '${project?.projectId.encodeAsHTML()}'
-                    </g:if>
-
-                    <g:if test="${pActivityId}">
-                        ,
-                        pActivityId: '${pActivityId.encodeAsHTML()}'
-                    </g:if>
-                };
-
-                $.ajax({
-                    url: fcConfig.ajaxUpdateUrl,
-                    type: 'POST',
-                    data: JSON.stringify(data),
-                    contentType: 'application/json',
-                    success: function (data) {
-                        if(data.status == 'created'){
-                        <g:if test="${project}">
-                            document.location.href = fcConfig.projectUrl;
-                        </g:if>
-                        <g:else>
-                            document.location.href = fcConfig.sitePageUrl + '/' + data.id;
-                        </g:else>
-                        } else if(data.status == 'updated'){
-                            document.location.href = fcConfig.sitePageUrl;
-                        } else {
-                            bootbox.alert('There was a problem saving this site', function() {location.reload();});
-                        }
-                    },
-                    error: function (data) {
-                        var errorMessage = data.responseText || 'There was a problem saving this site'
-                        bootbox.alert(errorMessage);
-                    }
-                });
-            }
-        });
-    });
-</asset:script>
-
-</body>
-</html>
\ No newline at end of file
diff --git a/grails-app/views/site/list.gsp b/grails-app/views/site/list.gsp
index f3508e95..a6298136 100644
--- a/grails-app/views/site/list.gsp
+++ b/grails-app/views/site/list.gsp
@@ -37,9 +37,6 @@
 </head>
 
 <body>
-    <g:link action="createSystematic" class="btn btn-small">
-    <i class="icon-plus"></i> <g:message code="mapConfiguration.site.create"></g:message> 
-    </g:link>
 <div id="siteSearch" class="container-fluid margin-top-10">
     <g:if test="${myFavourites}">
         <div class="row-fluid">
diff --git a/grails-app/views/user/_personal.gsp b/grails-app/views/user/_personal.gsp
deleted file mode 100644
index f4690f11..00000000
--- a/grails-app/views/user/_personal.gsp
+++ /dev/null
@@ -1,40 +0,0 @@
-<div class="row-fluid">
-        <h2><g:message code=""/>User details</h2>
-
-        <div class="span6">
-            <label for=""><g:message code=""/>First name<g:message code=""/></label>
-           <input data-bind="" id="" type="text" class="span12"/>
-        </div>
-        <div class="span6">
-            <label for=""><g:message code=""/>Last name<g:message code=""/></label>
-           <input data-bind="" id="" type="text" class="span12"/>
-        </div>
-        <div class="span6">
-            <label for=""><g:message code=""/>Email address<g:message code=""/></label>
-           <input data-bind="" id="" type="text" class="span12"/>
-        </div>
-        <div class="span6">
-            <label for=""><g:message code=""/>Registered online<g:message code=""/></label>
-           <input data-bind="" id="" type="text" class="span12"/>
-        </div>
-        <div class="span6">
-            <label for=""><g:message code=""/>Home number<g:message code=""/></label>
-           <input data-bind="" id="" type="text" class="span12"/>
-        </div>
-        <div class="span6">
-            <label for=""><g:message code=""/>Mobile number<g:message code=""/></label>
-           <input data-bind="" id="" type="text" class="span12"/>
-        </div>
-        <div class="span6">
-            <label for=""><g:message code=""/>Postcode<g:message code=""/></label>
-           <input data-bind="" id="" type="text" class="span12"/>
-        </div>
-        <div class="span6">
-            <label for=""><g:message code=""/>Address<g:message code=""/></label>
-           <input data-bind="" id="" type="text" class="span12"/>
-        </div>
-        <div class="span6">
-            <label for=""><g:message code=""/>User code<g:message code=""/></label>
-           <input data-bind="" id="" type="text" class="span12"/>
-        </div>
-</div>
diff --git a/grails-app/views/user/_sites.gsp b/grails-app/views/user/_sites.gsp
deleted file mode 100644
index c3687418..00000000
--- a/grails-app/views/user/_sites.gsp
+++ /dev/null
@@ -1,26 +0,0 @@
-    <div id="user-sites">
-        <table class="table table-striped table-bordered table-hover" id="user-sites">
-            <thead>
-            <th>Site code</th>
-            <th>Site Name</th>
-            <th>Year surveyed</th>
-            </thead>
-            <tr>
-            <td>02D2G</td>
-            <td>Spjutstorp</td>
-            <td>2019</td>
-            </tr>
-            <tr>
-            <td>02D2G</td>
-            <td>Spjutstorp</td>
-            <td>2018</td>
-            </tr>
-            <tr>
-            <td>02D3H</td>
-            <td>Humslesjo</td>
-            <td>2018</td>
-            </tr>
-            <tbody>
-            </tbody>
-        </table>
-    </div>
\ No newline at end of file
diff --git a/grails-app/views/user/_userDetails.gsp b/grails-app/views/user/_userDetails.gsp
deleted file mode 100644
index 0ac43075..00000000
--- a/grails-app/views/user/_userDetails.gsp
+++ /dev/null
@@ -1,12 +0,0 @@
-<ul class="nav nav-tabs" id="userDetailsResultTab">
-    <li><a href="#personal" id="personal-tab" data-toggle="tab">Personal info</a></li>
-    <li><a href="#sites" id="sites-tab" data-toggle="tab">Sites</a></li>
-</ul>
-<div class="tab-content">
-    <div class="tab-pane" id="personal">
-        <g:render template="/user/personal"></g:render>
-    </div>
-    <div class="tab-pane" id="sites">
-        <g:render template="/user/sites"></g:render>
-    </div>
-</div>
diff --git a/grails-app/views/user/create.gsp b/grails-app/views/user/create.gsp
deleted file mode 100644
index 03e742d8..00000000
--- a/grails-app/views/user/create.gsp
+++ /dev/null
@@ -1,159 +0,0 @@
-<%@ page import="grails.converters.JSON; org.grails.web.json.JSONArray" contentType="text/html;charset=UTF-8" %>
-<!DOCTYPE html>
-<html>
-<head>
-  <meta name="layout" content="${hubConfig.skin}"/>
-  <%-- <title> ${create ? 'New' : ('Edit | ' + site?.name?.encodeAsHTML())} | Users </title>
-    <g:if test="${project}">
-        <meta name="breadcrumb" content="Create new user for ${project?.name?.encodeAsHTML()}"/>
-    </g:if>
-    <g:elseif test="${create}">
-        <meta name="breadcrumb" content="Create"/>
-    </g:elseif>
-    <g:else>
-        <meta name="breadcrumbParent3"
-              content="${createLink(controller: 'site', action: 'index')}/${site?.siteId},${site?.name?.encodeAsHTML()}"/>
-        <meta name="breadcrumb" content="Edit"/>
-    </g:else> --%>
-
-    <style type="text/css">
-    legend {
-        border: none;
-        margin-bottom: 5px;
-    }
-    h1 input[type="text"] {
-        color: #333a3f;
-        font-size: 28px;
-        /*line-height: 40px;*/
-        font-weight: bold;
-        font-family: Arial, Helvetica, sans-serif;
-        height: 42px;
-    }
-    .no-border { border-top: none !important; }
-  </style>
-    <link rel="stylesheet" src="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400italic,600,700"/>
-    <link rel="stylesheet" src="https://fonts.googleapis.com/css?family=Oswald:300"/>
-    <asset:script type="text/javascript">
-    var fcConfig = {
-        <%-- sitePageUrl : "${createLink(action: 'index', id: site?.siteId)}",
-        homePageUrl : "${createLink(controller: 'home', action: 'index')}",
-        ajaxUpdateUrl: "${createLink(action: 'ajaxUpdate', id: site?.siteId)}",
-        mapLayersConfig: ${mapService.getMapLayersConfig(project, pActivity) as JSON},
-        returnTo: "${createLink(controller: 'project', action: 'index', id: project?.projectId)}"
-        }, --%>
-        here = window.location.href;
-
-    </asset:script>
-    <%-- <asset:stylesheet src="sites-manifest.css"/> --%>
-    <%-- <asset:stylesheet src="leaflet-manifest.css"/> --%>
-    <asset:javascript src="common.js"/>
-    <%-- <asset:javascript src="leaflet-manifest.js"/> --%>
-    <%-- <asset:javascript src="sites-manifest.js"/> --%>
-    <%-- <script src="${grailsApplication.config.google.maps.url}" async defer></script> --%>
-</head>
-<body>
-    <%-- <div class="container-fluid validationEngineContainer" id="validation-container"> --%>
-    <div class="container-fluid validationEngineContainer">
-        <bs:form action="update" inline="true">
-            
-            <g:render template="userDetails" model="${[showLine: true]}"/>
-
-            <div class="row-fluid">
-                <div class="form-actions span12">
-                    <button type="button" id="save" class="btn btn-primary">Save changes</button>
-                    <button type="button" id="cancel" class="btn">Cancel</button>
-                </div>
-            </div>
-        </bs:form>
-    </div>
-    <%-- <g:if env="development">
-    <div class="container-fluid">
-        <div class="expandable-debug">
-            <hr />
-            <h3>Debug</h3>
-            <div>
-                <h4>KO model</h4>
-                <pre data-bind="text:ko.toJSON($root,null,2)"></pre>
-                <h4>Activities</h4>
-                <pre>${site?.activities?.encodeAsHTML()}</pre>
-                <h4>Site</h4>
-                <pre>${site?.encodeAsHTML()}</pre>
-                <h4>Projects</h4>
-                <pre>${projects?.encodeAsHTML()}</pre>
-                <h4>Features</h4>
-                <pre>${mapFeatures}</pre>
-            </div>
-        </div>
-    </div>
-    </g:if> --%>
-<%-- 
-<asset:script type="text/javascript">
-    $(function(){
-
-        $('#validation-container').validationEngine('attach', {scroll: false});
-
-        $('.helphover').popover({animation: true, trigger:'hover'});
-
-        var siteViewModel = initSiteViewModel(true, ${!userCanEdit});
-        $('#cancel').click(function () {
-            if(siteViewModel.saved()){
-                document.location.href = fcConfig.sitePageUrl;
-            } if(fcConfig.projectUrl){
-                document.location.href = fcConfig.projectUrl;
-            }else {
-                document.location.href = fcConfig.homePageUrl;
-            }
-        });
-
-        $('#save').click(function () {
-            if ($('#validation-container').validationEngine('validate')) {
-                var json = siteViewModel.toJS();
-                //validate  if extent.geometry.pid, then update extent.source to pid, extent.geometry.type to pid
-                if (json.extent.geometry.pid){
-                    json.extent.source = 'pid';
-                    json.extent.geometry.type = 'pid'
-                }
-                var data = {
-                    site: json
-                    <g:if test="${project?.projectId}">
-                        ,
-                        projectId: '${project?.projectId.encodeAsHTML()}'
-                    </g:if>
-
-                    <g:if test="${pActivityId}">
-                        ,
-                        pActivityId: '${pActivityId.encodeAsHTML()}'
-                    </g:if>
-                };
-
-                $.ajax({
-                    url: fcConfig.ajaxUpdateUrl,
-                    type: 'POST',
-                    data: JSON.stringify(data),
-                    contentType: 'application/json',
-                    success: function (data) {
-                        if(data.status == 'created'){
-                        <g:if test="${project}">
-                            document.location.href = fcConfig.projectUrl;
-                        </g:if>
-                        <g:else>
-                            document.location.href = fcConfig.sitePageUrl + '/' + data.id;
-                        </g:else>
-                        } else if(data.status == 'updated'){
-                            document.location.href = fcConfig.sitePageUrl;
-                        } else {
-                            bootbox.alert('There was a problem saving this site', function() {location.reload();});
-                        }
-                    },
-                    error: function (data) {
-                        var errorMessage = data.responseText || 'There was a problem saving this site'
-                        bootbox.alert(errorMessage);
-                    }
-                });
-            }
-        });
-    });
-</asset:script> --%>
-
-</body>
-</html>
diff --git a/src/test/groovy/au/org/ala/biocollect/ProjectActivityServiceSpec.groovy b/src/test/groovy/au/org/ala/biocollect/ProjectActivityServiceSpec.groovy
new file mode 100644
index 00000000..5c9af3f1
--- /dev/null
+++ b/src/test/groovy/au/org/ala/biocollect/ProjectActivityServiceSpec.groovy
@@ -0,0 +1,166 @@
+package au.org.ala.biocollect
+
+import grails.test.mixin.TestFor
+import spock.lang.Specification
+import au.org.ala.biocollect.merit.ProjectService
+import au.org.ala.biocollect.merit.WebService
+import au.org.ala.biocollect.merit.MetadataService
+
+@TestFor(ProjectActivityService)
+class ProjectActivityServiceSpec extends Specification {
+    def projectActivity
+
+    def setup() {
+        service.projectService = Stub(ProjectService)
+        service.projectService.get(_) >> [:]
+        service.webService = Stub(WebService)
+        service.webService.getJson(_) >> [:]
+        service.metadataService = Stub(MetadataService)
+        service.metadataService.activitiesModel() >> ["activities": [["name": "pActivityFormName"]]]
+
+        projectActivity = [
+                "projectId"                          : "abc",
+                "status"                             : "active",
+                "description"                        : "abc",
+                "name"                               : "name",
+                "attribution"                        : "attribution",
+                "startDate"                          : "startDate",
+                "pActivityFormName"                  : "pActivityFormName",
+                "addCreatedSiteToListOfSelectedSites": false,
+                "surveySiteOption"                   : "sitecreate",
+                "allowPolygons"                      : false,
+                "allowLine"                          : false,
+                "defaultZoomArea"                    : "1315388a-968a-4a49-b2e6-773c6c953521",
+                "allowPoints"                        : true,
+                "restrictRecordToSites"              : false,
+                "sites"                              : ["1315388a-968a-4a49-b2e6-773c6c953521"],
+                "mapLayersConfig"                    : [
+                        "baseLayers": [
+                                [
+                                        "displayText": "ESRI Topographic",
+                                        "code"       : "topographic",
+                                        "isSelected" : true,
+                                        "transients" : ["changed": false]
+                                ]
+                        ],
+                        "overlays"  : [
+                                [
+                                        "showPropertyName"     : true,
+                                        "alaName"              : "ibra7_regions",
+                                        "defaultSelected"      : true,
+                                        "inLayerShapeList"     : true,
+                                        "display"              : [
+                                                "propertyName": "REG_NAME_7",
+                                                "cqlFilter"   : ""
+                                        ],
+                                        "userAccessRestriction": "anyUser",
+                                        "title"                : "Biogeographic regions",
+                                        "changeLayerColour"    : true,
+                                        "boundaryColour"       : "#000000",
+                                        "textColour"           : null,
+                                        "fillColour"           : null,
+                                        "alaId"                : "cl1048",
+                                        "style"                : [:],
+                                        "layerName"            : "",
+                                        "opacity"              : "1.0",
+                                        "transients"           : [
+                                                "changed": false
+                                        ]
+                                ]
+                        ]
+                ]
+        ]
+    }
+
+    def cleanup() {
+    }
+
+    def "validate should check site configuration and show appropriate errors"() {
+        def message
+        when: "Do not check site configuration if survey is not published"
+        projectActivity.published = false
+        message = service.validate(projectActivity, 'abc')
+
+        then:
+        message == null
+
+        when: "check validity for site creation setting when survey published"
+        projectActivity.surveySiteOption = "sitecreate"
+        projectActivity.allowPolygons = false
+        projectActivity.allowLine = false
+        projectActivity.allowPoints = false
+        projectActivity.published = true
+        message = service.validate(projectActivity, 'abc')
+
+        then:
+        message == "Location configuration is not valid. Either points, polygons or lines must be selected."
+
+        when: "check validity for site creation setting when survey published"
+        projectActivity.surveySiteOption = "sitecreate"
+        projectActivity.allowPolygons = true
+        projectActivity.allowLine = false
+        projectActivity.allowPoints = false
+        projectActivity.published = true
+        message = service.validate(projectActivity, 'abc')
+
+        then:
+        message == null
+
+        when: "check validity for site pick setting when survey published"
+        projectActivity.surveySiteOption = "sitepick"
+        projectActivity.sites = []
+        projectActivity.allowPolygons = true
+        projectActivity.allowLine = true
+        projectActivity.allowPoints = true
+        projectActivity.published = true
+        message = service.validate(projectActivity, 'abc')
+
+        then:
+        message == "Location configuration is not valid. Must select one or more sites."
+
+        when: "check validity for site pick setting when survey published"
+        projectActivity.surveySiteOption = "sitepick"
+        projectActivity.sites = ['abc']
+        projectActivity.published = true
+        message = service.validate(projectActivity, 'abc')
+
+        then:
+        message == null
+
+        when: "check validity for site pick & create setting when survey published"
+        projectActivity.surveySiteOption = "sitepickcreate"
+        projectActivity.sites = []
+        projectActivity.allowPolygons = false
+        projectActivity.allowLine = false
+        projectActivity.allowPoints = true
+        projectActivity.published = true
+        message = service.validate(projectActivity, 'abc')
+
+        then:
+        message == "Location configuration is not valid. Must select one or more sites."
+
+        when: "check validity for site pick & create setting when survey published"
+        projectActivity.surveySiteOption = "sitepickcreate"
+        projectActivity.sites = ['abc']
+        projectActivity.allowPolygons = false
+        projectActivity.allowLine = false
+        projectActivity.allowPoints = false
+        projectActivity.published = true
+        message = service.validate(projectActivity, 'abc')
+
+        then:
+        message == "Location configuration is not valid. Either points, polygons or lines must be selected."
+
+        when: "check validity for site pick & create setting when survey published"
+        projectActivity.surveySiteOption = "sitepickcreate"
+        projectActivity.sites = ['abc']
+        projectActivity.allowPolygons = true
+        projectActivity.allowLine = false
+        projectActivity.allowPoints = false
+        projectActivity.published = true
+        message = service.validate(projectActivity, 'abc')
+
+        then:
+        message == null
+    }
+}
diff --git a/src/test/js/spec/ProjectActivitySpec.js b/src/test/js/spec/ProjectActivitySpec.js
index 98502d4e..b606865d 100644
--- a/src/test/js/spec/ProjectActivitySpec.js
+++ b/src/test/js/spec/ProjectActivitySpec.js
@@ -119,6 +119,62 @@ describe("ProjectActivityViewModel Spec", function () {
         expect(pActivity.allowPolygons()).toEqual(false);
     })
 
+    it("isSiteConfigValid should check if site configuration is valid", function () {
+        var params = {
+            sites: [{
+                siteId: 'ghh',
+                name: 'Test',
+                extent: {
+                    geometry: {
+                        ibra: ""
+                    }
+                }
+            }],
+            pActivity: {
+                sites : [
+                    'ghh'
+                ],
+                allowPoints: false,
+                allowPolygons: false,
+                surveySiteOption: 'sitecreate'
+            }
+        };
+
+        var site = new SiteList({
+            siteId: 'ghh',
+            name: 'Test',
+            extent: {
+                geometry: {
+                    ibra: ""
+                }
+            }
+        });
+        site.added(true);
+
+        var pActivity = new ProjectActivity(params);
+        expect(pActivity.isSiteConfigValid()).toEqual(false);
+
+        pActivity.allowPoints(true);
+        expect(pActivity.isSiteConfigValid()).toEqual(true);
+
+        pActivity.surveySiteOption('sitepick');
+        pActivity.sites([]);
+        expect(pActivity.isSiteConfigValid()).toEqual(false);
+
+        pActivity.sites([site]);
+        expect(pActivity.isSiteConfigValid()).toEqual(true);
+
+
+        pActivity.surveySiteOption('sitepickcreate');
+        pActivity.sites([]);
+        pActivity.allowPoints(false);
+        expect(pActivity.isSiteConfigValid()).toEqual(false);
+
+        pActivity.sites([site]);
+        pActivity.allowPoints(true);
+        expect(pActivity.isSiteConfigValid()).toEqual(true);
+    })
+
 });
 
 describe("pActivityInfo Spec", function () {
